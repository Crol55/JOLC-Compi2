Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> asignacion
Rule 5     instruccion -> asignacion_struct
Rule 6     instruccion -> declareFunction
Rule 7     instruccion -> callFunction
Rule 8     instruccion -> condicional
Rule 9     instruccion -> whileST
Rule 10    instruccion -> forST
Rule 11    instruccion -> struct
Rule 12    instruccion -> inst_nativa
Rule 13    declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
Rule 14    declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
Rule 15    declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
Rule 16    declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
Rule 17    lista_instrucciones -> lista_instrucciones instruccion
Rule 18    lista_instrucciones -> lista_instrucciones transferencia
Rule 19    lista_instrucciones -> instruccion
Rule 20    lista_instrucciones -> transferencia
Rule 21    transferencia -> BREAK SEMICOLON
Rule 22    transferencia -> CONTINUE SEMICOLON
Rule 23    transferencia -> returnValue SEMICOLON
Rule 24    returnValue -> RETURN expresion
Rule 25    returnValue -> RETURN
Rule 26    lista_parametros -> lista_parametros COMMA IDENTIFICADOR
Rule 27    lista_parametros -> lista_parametros COMMA IDENTIFICADOR SUFIX tipo_dato
Rule 28    lista_parametros -> IDENTIFICADOR SUFIX tipo_dato
Rule 29    lista_parametros -> IDENTIFICADOR
Rule 30    asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON
Rule 31    asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
Rule 32    asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
Rule 33    asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
Rule 34    tipoVariable -> GLOBAL
Rule 35    tipoVariable -> LOCAL
Rule 36    tipo_dato -> INT64
Rule 37    tipo_dato -> FLOAT64
Rule 38    tipo_dato -> BOOL
Rule 39    tipo_dato -> CHAR
Rule 40    tipo_dato -> STRING
Rule 41    tipo_dato -> ARRAY
Rule 42    tipo_dato -> NOTHING
Rule 43    tipo_dato -> IDENTIFICADOR
Rule 44    callFunction -> callFunc SEMICOLON
Rule 45    callFunc -> IDENTIFICADOR LPAR RPAR
Rule 46    callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR
Rule 47    sentencias -> lista_instrucciones
Rule 48    sentencias -> <empty>
Rule 49    condicional -> IF expresion sentencias END SEMICOLON
Rule 50    condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON
Rule 51    condicional -> IF expresion sentencias elseifList END SEMICOLON
Rule 52    condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
Rule 53    elseifList -> elseifList ELSEIF expresion sentencias
Rule 54    elseifList -> ELSEIF expresion sentencias
Rule 55    whileST -> WHILE expresion sentencias END SEMICOLON
Rule 56    forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
Rule 57    lista_expresion -> lista_expresion COMMA expresion
Rule 58    lista_expresion -> expresion
Rule 59    struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
Rule 60    struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
Rule 61    lista_atributos -> lista_atributos IDENTIFICADOR SUFIX tipo_dato SEMICOLON
Rule 62    lista_atributos -> lista_atributos IDENTIFICADOR SEMICOLON
Rule 63    lista_atributos -> IDENTIFICADOR SUFIX tipo_dato SEMICOLON
Rule 64    lista_atributos -> IDENTIFICADOR SEMICOLON
Rule 65    inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON
Rule 66    inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON
Rule 67    inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
Rule 68    inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
Rule 69    expresion -> RESTA expresion
Rule 70    expresion -> NOT expresion
Rule 71    expresion -> expresion AND expresion
Rule 72    expresion -> expresion OR expresion
Rule 73    expresion -> expresion SUM expresion
Rule 74    expresion -> expresion RESTA expresion
Rule 75    expresion -> expresion MUL expresion
Rule 76    expresion -> expresion DIV expresion
Rule 77    expresion -> expresion POT expresion
Rule 78    expresion -> expresion MOD expresion
Rule 79    expresion -> expresion DEQUALS expresion
Rule 80    expresion -> expresion DIFF expresion
Rule 81    expresion -> expresion GREATER expresion
Rule 82    expresion -> expresion LESSTHAN expresion
Rule 83    expresion -> expresion GEQ expresion
Rule 84    expresion -> expresion LEQ expresion
Rule 85    expresion -> IDENTIFICADOR
Rule 86    expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR
Rule 87    expresion -> LPAR expresion RPAR
Rule 88    expresion -> primitivas
Rule 89    expresion -> nativas
Rule 90    expresion -> callFunc
Rule 91    expresion -> callArrays
Rule 92    callArrays -> IDENTIFICADOR dimensiones
Rule 93    dimensiones -> dimensiones BRACKETA expresion BRACKETC
Rule 94    dimensiones -> BRACKETA expresion BRACKETC
Rule 95    primitivas -> ENTERO
Rule 96    primitivas -> DECIMAL
Rule 97    primitivas -> FALSE
Rule 98    primitivas -> TRUE
Rule 99    primitivas -> STRINGLITERAL
Rule 100   primitivas -> CHARLITERAL
Rule 101   primitivas -> NOTHING
Rule 102   primitivas -> BRACKETA BRACKETC
Rule 103   primitivas -> BRACKETA items BRACKETC
Rule 104   nativas -> SENO LPAR expresion RPAR
Rule 105   nativas -> COSENO LPAR expresion RPAR
Rule 106   nativas -> LOG LPAR expresion COMMA expresion RPAR
Rule 107   nativas -> LOG10 LPAR expresion RPAR
Rule 108   nativas -> RAIZ LPAR expresion RPAR
Rule 109   nativas -> TANGENTE LPAR expresion RPAR
Rule 110   nativas -> LOWERCASE LPAR expresion RPAR
Rule 111   nativas -> UPPERCASE LPAR expresion RPAR
Rule 112   nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR
Rule 113   nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR
Rule 114   nativas -> FLOATCAST LPAR expresion RPAR
Rule 115   nativas -> STRINGCAST LPAR expresion RPAR
Rule 116   nativas -> TYPEOF LPAR expresion RPAR
Rule 117   items -> items COMMA expresion
Rule 118   items -> expresion

Terminals, with rules where they appear

AND                  : 71
ARRAY                : 41
BOOL                 : 38
BRACKETA             : 93 94 102 103
BRACKETC             : 93 94 102 103
BREAK                : 21
CHAR                 : 39
CHARLITERAL          : 100
COMMA                : 26 27 57 67 68 106 112 113 117
CONTINUE             : 22
COSENO               : 105
DECIMAL              : 96
DEQUALS              : 79
DIFF                 : 80
DIV                  : 76
ELSE                 : 50 52
ELSEIF               : 53 54
END                  : 13 14 15 16 49 50 51 52 55 56 59 60
ENTERO               : 95
EQUALS               : 30 31 32 33
FALSE                : 97
FLOAT64              : 37
FLOATCAST            : 114
FOR                  : 56
FUNCTION             : 13 14 15 16
GEQ                  : 83
GLOBAL               : 34
GREATER              : 81
IDENTIFICADOR        : 13 14 15 16 26 27 28 29 30 31 32 33 33 43 45 46 56 59 60 61 62 63 64 67 68 85 86 86 92
IF                   : 49 50 51 52
IN                   : 56
INT64                : 36
LEQ                  : 84
LESSTHAN             : 82
LOCAL                : 35
LOG                  : 106
LOG10                : 107
LOWERCASE            : 110
LPAR                 : 13 14 15 16 45 46 65 66 67 68 87 104 105 106 107 108 109 110 111 112 113 114 115 116
MOD                  : 78
MUL                  : 75
MUTABLE              : 59
NOT                  : 70
NOTHING              : 42 101
OR                   : 72
PARSE                : 112
POP                  : 68
POT                  : 77
PRINT                : 65
PRINTLN              : 66
PUNTO                : 33 86
PUSH                 : 67
RAIZ                 : 108
RESTA                : 69 74
RETURN               : 24 25
RPAR                 : 13 14 15 16 45 46 65 66 67 68 87 104 105 106 107 108 109 110 111 112 113 114 115 116
SEMICOLON            : 13 14 15 16 21 22 23 30 31 32 33 44 49 50 51 52 55 56 59 60 61 62 63 64 65 66 67 68
SENO                 : 104
STRING               : 40
STRINGCAST           : 115
STRINGLITERAL        : 99
STRUCT               : 59 60
SUFIX                : 27 28 32 61 63
SUM                  : 73
TANGENTE             : 109
TRUE                 : 98
TRUNC                : 113
TYPEOF               : 116
UPPERCASE            : 111
WHILE                : 55
error                : 

Nonterminals, with rules where they appear

asignacion           : 4
asignacion_struct    : 5
callArrays           : 91
callFunc             : 44 90
callFunction         : 7
condicional          : 8
declareFunction      : 6
dimensiones          : 92 93
elseifList           : 51 52 53
expresion            : 24 30 31 32 33 49 50 51 52 53 54 55 56 57 58 67 68 69 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 87 93 94 104 105 106 106 107 108 109 110 111 112 113 114 115 116 117 118
forST                : 10
inicio               : 0
inst_nativa          : 12
instruccion          : 2 3 17 19
instrucciones        : 1 2
items                : 103 117
lista_atributos      : 59 60 61 62
lista_expresion      : 46 57 65 66
lista_instrucciones  : 13 15 17 18 47
lista_parametros     : 13 16 26 27
nativas              : 89
primitivas           : 88
returnValue          : 23
sentencias           : 49 50 50 51 52 52 53 54 55 56
struct               : 11
tipoVariable         : 31
tipo_dato            : 27 28 32 61 63 112 113
transferencia        : 18 20
whileST              : 9

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    $end            reduce using rule 1 (inicio -> instrucciones .)
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    instruccion                    shift and go to state 28
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 3

    (3) instrucciones -> instruccion .

    IDENTIFICADOR   reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    MUTABLE         reduce using rule 3 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    PUSH            reduce using rule 3 (instrucciones -> instruccion .)
    POP             reduce using rule 3 (instrucciones -> instruccion .)
    GLOBAL          reduce using rule 3 (instrucciones -> instruccion .)
    LOCAL           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> asignacion .

    IDENTIFICADOR   reduce using rule 4 (instruccion -> asignacion .)
    FUNCTION        reduce using rule 4 (instruccion -> asignacion .)
    IF              reduce using rule 4 (instruccion -> asignacion .)
    WHILE           reduce using rule 4 (instruccion -> asignacion .)
    FOR             reduce using rule 4 (instruccion -> asignacion .)
    MUTABLE         reduce using rule 4 (instruccion -> asignacion .)
    STRUCT          reduce using rule 4 (instruccion -> asignacion .)
    PRINT           reduce using rule 4 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 4 (instruccion -> asignacion .)
    PUSH            reduce using rule 4 (instruccion -> asignacion .)
    POP             reduce using rule 4 (instruccion -> asignacion .)
    GLOBAL          reduce using rule 4 (instruccion -> asignacion .)
    LOCAL           reduce using rule 4 (instruccion -> asignacion .)
    $end            reduce using rule 4 (instruccion -> asignacion .)
    BREAK           reduce using rule 4 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 4 (instruccion -> asignacion .)
    RETURN          reduce using rule 4 (instruccion -> asignacion .)
    END             reduce using rule 4 (instruccion -> asignacion .)
    ELSE            reduce using rule 4 (instruccion -> asignacion .)
    ELSEIF          reduce using rule 4 (instruccion -> asignacion .)


state 5

    (5) instruccion -> asignacion_struct .

    IDENTIFICADOR   reduce using rule 5 (instruccion -> asignacion_struct .)
    FUNCTION        reduce using rule 5 (instruccion -> asignacion_struct .)
    IF              reduce using rule 5 (instruccion -> asignacion_struct .)
    WHILE           reduce using rule 5 (instruccion -> asignacion_struct .)
    FOR             reduce using rule 5 (instruccion -> asignacion_struct .)
    MUTABLE         reduce using rule 5 (instruccion -> asignacion_struct .)
    STRUCT          reduce using rule 5 (instruccion -> asignacion_struct .)
    PRINT           reduce using rule 5 (instruccion -> asignacion_struct .)
    PRINTLN         reduce using rule 5 (instruccion -> asignacion_struct .)
    PUSH            reduce using rule 5 (instruccion -> asignacion_struct .)
    POP             reduce using rule 5 (instruccion -> asignacion_struct .)
    GLOBAL          reduce using rule 5 (instruccion -> asignacion_struct .)
    LOCAL           reduce using rule 5 (instruccion -> asignacion_struct .)
    $end            reduce using rule 5 (instruccion -> asignacion_struct .)
    BREAK           reduce using rule 5 (instruccion -> asignacion_struct .)
    CONTINUE        reduce using rule 5 (instruccion -> asignacion_struct .)
    RETURN          reduce using rule 5 (instruccion -> asignacion_struct .)
    END             reduce using rule 5 (instruccion -> asignacion_struct .)
    ELSE            reduce using rule 5 (instruccion -> asignacion_struct .)
    ELSEIF          reduce using rule 5 (instruccion -> asignacion_struct .)


state 6

    (6) instruccion -> declareFunction .

    IDENTIFICADOR   reduce using rule 6 (instruccion -> declareFunction .)
    FUNCTION        reduce using rule 6 (instruccion -> declareFunction .)
    IF              reduce using rule 6 (instruccion -> declareFunction .)
    WHILE           reduce using rule 6 (instruccion -> declareFunction .)
    FOR             reduce using rule 6 (instruccion -> declareFunction .)
    MUTABLE         reduce using rule 6 (instruccion -> declareFunction .)
    STRUCT          reduce using rule 6 (instruccion -> declareFunction .)
    PRINT           reduce using rule 6 (instruccion -> declareFunction .)
    PRINTLN         reduce using rule 6 (instruccion -> declareFunction .)
    PUSH            reduce using rule 6 (instruccion -> declareFunction .)
    POP             reduce using rule 6 (instruccion -> declareFunction .)
    GLOBAL          reduce using rule 6 (instruccion -> declareFunction .)
    LOCAL           reduce using rule 6 (instruccion -> declareFunction .)
    $end            reduce using rule 6 (instruccion -> declareFunction .)
    BREAK           reduce using rule 6 (instruccion -> declareFunction .)
    CONTINUE        reduce using rule 6 (instruccion -> declareFunction .)
    RETURN          reduce using rule 6 (instruccion -> declareFunction .)
    END             reduce using rule 6 (instruccion -> declareFunction .)
    ELSE            reduce using rule 6 (instruccion -> declareFunction .)
    ELSEIF          reduce using rule 6 (instruccion -> declareFunction .)


state 7

    (7) instruccion -> callFunction .

    IDENTIFICADOR   reduce using rule 7 (instruccion -> callFunction .)
    FUNCTION        reduce using rule 7 (instruccion -> callFunction .)
    IF              reduce using rule 7 (instruccion -> callFunction .)
    WHILE           reduce using rule 7 (instruccion -> callFunction .)
    FOR             reduce using rule 7 (instruccion -> callFunction .)
    MUTABLE         reduce using rule 7 (instruccion -> callFunction .)
    STRUCT          reduce using rule 7 (instruccion -> callFunction .)
    PRINT           reduce using rule 7 (instruccion -> callFunction .)
    PRINTLN         reduce using rule 7 (instruccion -> callFunction .)
    PUSH            reduce using rule 7 (instruccion -> callFunction .)
    POP             reduce using rule 7 (instruccion -> callFunction .)
    GLOBAL          reduce using rule 7 (instruccion -> callFunction .)
    LOCAL           reduce using rule 7 (instruccion -> callFunction .)
    $end            reduce using rule 7 (instruccion -> callFunction .)
    BREAK           reduce using rule 7 (instruccion -> callFunction .)
    CONTINUE        reduce using rule 7 (instruccion -> callFunction .)
    RETURN          reduce using rule 7 (instruccion -> callFunction .)
    END             reduce using rule 7 (instruccion -> callFunction .)
    ELSE            reduce using rule 7 (instruccion -> callFunction .)
    ELSEIF          reduce using rule 7 (instruccion -> callFunction .)


state 8

    (8) instruccion -> condicional .

    IDENTIFICADOR   reduce using rule 8 (instruccion -> condicional .)
    FUNCTION        reduce using rule 8 (instruccion -> condicional .)
    IF              reduce using rule 8 (instruccion -> condicional .)
    WHILE           reduce using rule 8 (instruccion -> condicional .)
    FOR             reduce using rule 8 (instruccion -> condicional .)
    MUTABLE         reduce using rule 8 (instruccion -> condicional .)
    STRUCT          reduce using rule 8 (instruccion -> condicional .)
    PRINT           reduce using rule 8 (instruccion -> condicional .)
    PRINTLN         reduce using rule 8 (instruccion -> condicional .)
    PUSH            reduce using rule 8 (instruccion -> condicional .)
    POP             reduce using rule 8 (instruccion -> condicional .)
    GLOBAL          reduce using rule 8 (instruccion -> condicional .)
    LOCAL           reduce using rule 8 (instruccion -> condicional .)
    $end            reduce using rule 8 (instruccion -> condicional .)
    BREAK           reduce using rule 8 (instruccion -> condicional .)
    CONTINUE        reduce using rule 8 (instruccion -> condicional .)
    RETURN          reduce using rule 8 (instruccion -> condicional .)
    END             reduce using rule 8 (instruccion -> condicional .)
    ELSE            reduce using rule 8 (instruccion -> condicional .)
    ELSEIF          reduce using rule 8 (instruccion -> condicional .)


state 9

    (9) instruccion -> whileST .

    IDENTIFICADOR   reduce using rule 9 (instruccion -> whileST .)
    FUNCTION        reduce using rule 9 (instruccion -> whileST .)
    IF              reduce using rule 9 (instruccion -> whileST .)
    WHILE           reduce using rule 9 (instruccion -> whileST .)
    FOR             reduce using rule 9 (instruccion -> whileST .)
    MUTABLE         reduce using rule 9 (instruccion -> whileST .)
    STRUCT          reduce using rule 9 (instruccion -> whileST .)
    PRINT           reduce using rule 9 (instruccion -> whileST .)
    PRINTLN         reduce using rule 9 (instruccion -> whileST .)
    PUSH            reduce using rule 9 (instruccion -> whileST .)
    POP             reduce using rule 9 (instruccion -> whileST .)
    GLOBAL          reduce using rule 9 (instruccion -> whileST .)
    LOCAL           reduce using rule 9 (instruccion -> whileST .)
    $end            reduce using rule 9 (instruccion -> whileST .)
    BREAK           reduce using rule 9 (instruccion -> whileST .)
    CONTINUE        reduce using rule 9 (instruccion -> whileST .)
    RETURN          reduce using rule 9 (instruccion -> whileST .)
    END             reduce using rule 9 (instruccion -> whileST .)
    ELSE            reduce using rule 9 (instruccion -> whileST .)
    ELSEIF          reduce using rule 9 (instruccion -> whileST .)


state 10

    (10) instruccion -> forST .

    IDENTIFICADOR   reduce using rule 10 (instruccion -> forST .)
    FUNCTION        reduce using rule 10 (instruccion -> forST .)
    IF              reduce using rule 10 (instruccion -> forST .)
    WHILE           reduce using rule 10 (instruccion -> forST .)
    FOR             reduce using rule 10 (instruccion -> forST .)
    MUTABLE         reduce using rule 10 (instruccion -> forST .)
    STRUCT          reduce using rule 10 (instruccion -> forST .)
    PRINT           reduce using rule 10 (instruccion -> forST .)
    PRINTLN         reduce using rule 10 (instruccion -> forST .)
    PUSH            reduce using rule 10 (instruccion -> forST .)
    POP             reduce using rule 10 (instruccion -> forST .)
    GLOBAL          reduce using rule 10 (instruccion -> forST .)
    LOCAL           reduce using rule 10 (instruccion -> forST .)
    $end            reduce using rule 10 (instruccion -> forST .)
    BREAK           reduce using rule 10 (instruccion -> forST .)
    CONTINUE        reduce using rule 10 (instruccion -> forST .)
    RETURN          reduce using rule 10 (instruccion -> forST .)
    END             reduce using rule 10 (instruccion -> forST .)
    ELSE            reduce using rule 10 (instruccion -> forST .)
    ELSEIF          reduce using rule 10 (instruccion -> forST .)


state 11

    (11) instruccion -> struct .

    IDENTIFICADOR   reduce using rule 11 (instruccion -> struct .)
    FUNCTION        reduce using rule 11 (instruccion -> struct .)
    IF              reduce using rule 11 (instruccion -> struct .)
    WHILE           reduce using rule 11 (instruccion -> struct .)
    FOR             reduce using rule 11 (instruccion -> struct .)
    MUTABLE         reduce using rule 11 (instruccion -> struct .)
    STRUCT          reduce using rule 11 (instruccion -> struct .)
    PRINT           reduce using rule 11 (instruccion -> struct .)
    PRINTLN         reduce using rule 11 (instruccion -> struct .)
    PUSH            reduce using rule 11 (instruccion -> struct .)
    POP             reduce using rule 11 (instruccion -> struct .)
    GLOBAL          reduce using rule 11 (instruccion -> struct .)
    LOCAL           reduce using rule 11 (instruccion -> struct .)
    $end            reduce using rule 11 (instruccion -> struct .)
    BREAK           reduce using rule 11 (instruccion -> struct .)
    CONTINUE        reduce using rule 11 (instruccion -> struct .)
    RETURN          reduce using rule 11 (instruccion -> struct .)
    END             reduce using rule 11 (instruccion -> struct .)
    ELSE            reduce using rule 11 (instruccion -> struct .)
    ELSEIF          reduce using rule 11 (instruccion -> struct .)


state 12

    (12) instruccion -> inst_nativa .

    IDENTIFICADOR   reduce using rule 12 (instruccion -> inst_nativa .)
    FUNCTION        reduce using rule 12 (instruccion -> inst_nativa .)
    IF              reduce using rule 12 (instruccion -> inst_nativa .)
    WHILE           reduce using rule 12 (instruccion -> inst_nativa .)
    FOR             reduce using rule 12 (instruccion -> inst_nativa .)
    MUTABLE         reduce using rule 12 (instruccion -> inst_nativa .)
    STRUCT          reduce using rule 12 (instruccion -> inst_nativa .)
    PRINT           reduce using rule 12 (instruccion -> inst_nativa .)
    PRINTLN         reduce using rule 12 (instruccion -> inst_nativa .)
    PUSH            reduce using rule 12 (instruccion -> inst_nativa .)
    POP             reduce using rule 12 (instruccion -> inst_nativa .)
    GLOBAL          reduce using rule 12 (instruccion -> inst_nativa .)
    LOCAL           reduce using rule 12 (instruccion -> inst_nativa .)
    $end            reduce using rule 12 (instruccion -> inst_nativa .)
    BREAK           reduce using rule 12 (instruccion -> inst_nativa .)
    CONTINUE        reduce using rule 12 (instruccion -> inst_nativa .)
    RETURN          reduce using rule 12 (instruccion -> inst_nativa .)
    END             reduce using rule 12 (instruccion -> inst_nativa .)
    ELSE            reduce using rule 12 (instruccion -> inst_nativa .)
    ELSEIF          reduce using rule 12 (instruccion -> inst_nativa .)


state 13

    (30) asignacion -> IDENTIFICADOR . EQUALS expresion SEMICOLON
    (32) asignacion -> IDENTIFICADOR . EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> IDENTIFICADOR . PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (45) callFunc -> IDENTIFICADOR . LPAR RPAR
    (46) callFunc -> IDENTIFICADOR . LPAR lista_expresion RPAR

    EQUALS          shift and go to state 29
    PUNTO           shift and go to state 30
    LPAR            shift and go to state 31


state 14

    (31) asignacion -> tipoVariable . IDENTIFICADOR EQUALS expresion SEMICOLON

    IDENTIFICADOR   shift and go to state 32


state 15

    (13) declareFunction -> FUNCTION . IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> FUNCTION . IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> FUNCTION . IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> FUNCTION . IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON

    IDENTIFICADOR   shift and go to state 33


state 16

    (44) callFunction -> callFunc . SEMICOLON

    SEMICOLON       shift and go to state 34


state 17

    (49) condicional -> IF . expresion sentencias END SEMICOLON
    (50) condicional -> IF . expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> IF . expresion sentencias elseifList END SEMICOLON
    (52) condicional -> IF . expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 35
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 18

    (55) whileST -> WHILE . expresion sentencias END SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 65
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 19

    (56) forST -> FOR . IDENTIFICADOR IN expresion sentencias END SEMICOLON

    IDENTIFICADOR   shift and go to state 66


state 20

    (59) struct -> MUTABLE . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON

    STRUCT          shift and go to state 67


state 21

    (60) struct -> STRUCT . IDENTIFICADOR lista_atributos END SEMICOLON

    IDENTIFICADOR   shift and go to state 68


state 22

    (65) inst_nativa -> PRINT . LPAR lista_expresion RPAR SEMICOLON

    LPAR            shift and go to state 69


state 23

    (66) inst_nativa -> PRINTLN . LPAR lista_expresion RPAR SEMICOLON

    LPAR            shift and go to state 70


state 24

    (67) inst_nativa -> PUSH . LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON

    LPAR            shift and go to state 71


state 25

    (68) inst_nativa -> POP . LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON

    LPAR            shift and go to state 72


state 26

    (34) tipoVariable -> GLOBAL .

    IDENTIFICADOR   reduce using rule 34 (tipoVariable -> GLOBAL .)


state 27

    (35) tipoVariable -> LOCAL .

    IDENTIFICADOR   reduce using rule 35 (tipoVariable -> LOCAL .)


state 28

    (2) instrucciones -> instrucciones instruccion .

    IDENTIFICADOR   reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MUTABLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PUSH            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    POP             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    GLOBAL          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOCAL           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 29

    (30) asignacion -> IDENTIFICADOR EQUALS . expresion SEMICOLON
    (32) asignacion -> IDENTIFICADOR EQUALS . expresion SUFIX tipo_dato SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 73
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 30

    (33) asignacion_struct -> IDENTIFICADOR PUNTO . IDENTIFICADOR EQUALS expresion SEMICOLON

    IDENTIFICADOR   shift and go to state 74


state 31

    (45) callFunc -> IDENTIFICADOR LPAR . RPAR
    (46) callFunc -> IDENTIFICADOR LPAR . lista_expresion RPAR
    (57) lista_expresion -> . lista_expresion COMMA expresion
    (58) lista_expresion -> . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RPAR            shift and go to state 75
    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    lista_expresion                shift and go to state 76
    expresion                      shift and go to state 77
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 32

    (31) asignacion -> tipoVariable IDENTIFICADOR . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 78


state 33

    (13) declareFunction -> FUNCTION IDENTIFICADOR . LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> FUNCTION IDENTIFICADOR . LPAR RPAR END SEMICOLON
    (15) declareFunction -> FUNCTION IDENTIFICADOR . LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> FUNCTION IDENTIFICADOR . LPAR lista_parametros RPAR END SEMICOLON

    LPAR            shift and go to state 79


state 34

    (44) callFunction -> callFunc SEMICOLON .

    IDENTIFICADOR   reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    FUNCTION        reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    IF              reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    WHILE           reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    FOR             reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    MUTABLE         reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    STRUCT          reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    PRINT           reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    PRINTLN         reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    PUSH            reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    POP             reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    GLOBAL          reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    LOCAL           reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    $end            reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    BREAK           reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    CONTINUE        reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    RETURN          reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    END             reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    ELSE            reduce using rule 44 (callFunction -> callFunc SEMICOLON .)
    ELSEIF          reduce using rule 44 (callFunction -> callFunc SEMICOLON .)


state 35

    (49) condicional -> IF expresion . sentencias END SEMICOLON
    (50) condicional -> IF expresion . sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> IF expresion . sentencias elseifList END SEMICOLON
    (52) condicional -> IF expresion . sentencias elseifList ELSE sentencias END SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion
    (47) sentencias -> . lista_instrucciones
    (48) sentencias -> .
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94
    END             reduce using rule 48 (sentencias -> .)
    ELSE            reduce using rule 48 (sentencias -> .)
    ELSEIF          reduce using rule 48 (sentencias -> .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    sentencias                     shift and go to state 80
    lista_instrucciones            shift and go to state 95
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 36

    (69) expresion -> RESTA . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 102
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 37

    (70) expresion -> NOT . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 103
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 38

    (85) expresion -> IDENTIFICADOR .
    (86) expresion -> IDENTIFICADOR . PUNTO IDENTIFICADOR
    (45) callFunc -> IDENTIFICADOR . LPAR RPAR
    (46) callFunc -> IDENTIFICADOR . LPAR lista_expresion RPAR
    (92) callArrays -> IDENTIFICADOR . dimensiones
    (93) dimensiones -> . dimensiones BRACKETA expresion BRACKETC
    (94) dimensiones -> . BRACKETA expresion BRACKETC

    AND             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    OR              reduce using rule 85 (expresion -> IDENTIFICADOR .)
    SUM             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    RESTA           reduce using rule 85 (expresion -> IDENTIFICADOR .)
    MUL             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    DIV             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    POT             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    MOD             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    DEQUALS         reduce using rule 85 (expresion -> IDENTIFICADOR .)
    DIFF            reduce using rule 85 (expresion -> IDENTIFICADOR .)
    GREATER         reduce using rule 85 (expresion -> IDENTIFICADOR .)
    LESSTHAN        reduce using rule 85 (expresion -> IDENTIFICADOR .)
    GEQ             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    LEQ             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    BREAK           reduce using rule 85 (expresion -> IDENTIFICADOR .)
    CONTINUE        reduce using rule 85 (expresion -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 85 (expresion -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 85 (expresion -> IDENTIFICADOR .)
    IF              reduce using rule 85 (expresion -> IDENTIFICADOR .)
    WHILE           reduce using rule 85 (expresion -> IDENTIFICADOR .)
    FOR             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    MUTABLE         reduce using rule 85 (expresion -> IDENTIFICADOR .)
    STRUCT          reduce using rule 85 (expresion -> IDENTIFICADOR .)
    PRINT           reduce using rule 85 (expresion -> IDENTIFICADOR .)
    PRINTLN         reduce using rule 85 (expresion -> IDENTIFICADOR .)
    PUSH            reduce using rule 85 (expresion -> IDENTIFICADOR .)
    POP             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    RETURN          reduce using rule 85 (expresion -> IDENTIFICADOR .)
    GLOBAL          reduce using rule 85 (expresion -> IDENTIFICADOR .)
    LOCAL           reduce using rule 85 (expresion -> IDENTIFICADOR .)
    END             reduce using rule 85 (expresion -> IDENTIFICADOR .)
    ELSE            reduce using rule 85 (expresion -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 85 (expresion -> IDENTIFICADOR .)
    SEMICOLON       reduce using rule 85 (expresion -> IDENTIFICADOR .)
    SUFIX           reduce using rule 85 (expresion -> IDENTIFICADOR .)
    RPAR            reduce using rule 85 (expresion -> IDENTIFICADOR .)
    COMMA           reduce using rule 85 (expresion -> IDENTIFICADOR .)
    BRACKETC        reduce using rule 85 (expresion -> IDENTIFICADOR .)
    PUNTO           shift and go to state 104
    LPAR            shift and go to state 31
    BRACKETA        shift and go to state 106

    dimensiones                    shift and go to state 105

state 39

    (87) expresion -> LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 107
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 40

    (88) expresion -> primitivas .

    AND             reduce using rule 88 (expresion -> primitivas .)
    OR              reduce using rule 88 (expresion -> primitivas .)
    SUM             reduce using rule 88 (expresion -> primitivas .)
    RESTA           reduce using rule 88 (expresion -> primitivas .)
    MUL             reduce using rule 88 (expresion -> primitivas .)
    DIV             reduce using rule 88 (expresion -> primitivas .)
    POT             reduce using rule 88 (expresion -> primitivas .)
    MOD             reduce using rule 88 (expresion -> primitivas .)
    DEQUALS         reduce using rule 88 (expresion -> primitivas .)
    DIFF            reduce using rule 88 (expresion -> primitivas .)
    GREATER         reduce using rule 88 (expresion -> primitivas .)
    LESSTHAN        reduce using rule 88 (expresion -> primitivas .)
    GEQ             reduce using rule 88 (expresion -> primitivas .)
    LEQ             reduce using rule 88 (expresion -> primitivas .)
    BREAK           reduce using rule 88 (expresion -> primitivas .)
    CONTINUE        reduce using rule 88 (expresion -> primitivas .)
    IDENTIFICADOR   reduce using rule 88 (expresion -> primitivas .)
    FUNCTION        reduce using rule 88 (expresion -> primitivas .)
    IF              reduce using rule 88 (expresion -> primitivas .)
    WHILE           reduce using rule 88 (expresion -> primitivas .)
    FOR             reduce using rule 88 (expresion -> primitivas .)
    MUTABLE         reduce using rule 88 (expresion -> primitivas .)
    STRUCT          reduce using rule 88 (expresion -> primitivas .)
    PRINT           reduce using rule 88 (expresion -> primitivas .)
    PRINTLN         reduce using rule 88 (expresion -> primitivas .)
    PUSH            reduce using rule 88 (expresion -> primitivas .)
    POP             reduce using rule 88 (expresion -> primitivas .)
    RETURN          reduce using rule 88 (expresion -> primitivas .)
    GLOBAL          reduce using rule 88 (expresion -> primitivas .)
    LOCAL           reduce using rule 88 (expresion -> primitivas .)
    END             reduce using rule 88 (expresion -> primitivas .)
    ELSE            reduce using rule 88 (expresion -> primitivas .)
    ELSEIF          reduce using rule 88 (expresion -> primitivas .)
    SEMICOLON       reduce using rule 88 (expresion -> primitivas .)
    SUFIX           reduce using rule 88 (expresion -> primitivas .)
    RPAR            reduce using rule 88 (expresion -> primitivas .)
    COMMA           reduce using rule 88 (expresion -> primitivas .)
    BRACKETC        reduce using rule 88 (expresion -> primitivas .)


state 41

    (89) expresion -> nativas .

    AND             reduce using rule 89 (expresion -> nativas .)
    OR              reduce using rule 89 (expresion -> nativas .)
    SUM             reduce using rule 89 (expresion -> nativas .)
    RESTA           reduce using rule 89 (expresion -> nativas .)
    MUL             reduce using rule 89 (expresion -> nativas .)
    DIV             reduce using rule 89 (expresion -> nativas .)
    POT             reduce using rule 89 (expresion -> nativas .)
    MOD             reduce using rule 89 (expresion -> nativas .)
    DEQUALS         reduce using rule 89 (expresion -> nativas .)
    DIFF            reduce using rule 89 (expresion -> nativas .)
    GREATER         reduce using rule 89 (expresion -> nativas .)
    LESSTHAN        reduce using rule 89 (expresion -> nativas .)
    GEQ             reduce using rule 89 (expresion -> nativas .)
    LEQ             reduce using rule 89 (expresion -> nativas .)
    BREAK           reduce using rule 89 (expresion -> nativas .)
    CONTINUE        reduce using rule 89 (expresion -> nativas .)
    IDENTIFICADOR   reduce using rule 89 (expresion -> nativas .)
    FUNCTION        reduce using rule 89 (expresion -> nativas .)
    IF              reduce using rule 89 (expresion -> nativas .)
    WHILE           reduce using rule 89 (expresion -> nativas .)
    FOR             reduce using rule 89 (expresion -> nativas .)
    MUTABLE         reduce using rule 89 (expresion -> nativas .)
    STRUCT          reduce using rule 89 (expresion -> nativas .)
    PRINT           reduce using rule 89 (expresion -> nativas .)
    PRINTLN         reduce using rule 89 (expresion -> nativas .)
    PUSH            reduce using rule 89 (expresion -> nativas .)
    POP             reduce using rule 89 (expresion -> nativas .)
    RETURN          reduce using rule 89 (expresion -> nativas .)
    GLOBAL          reduce using rule 89 (expresion -> nativas .)
    LOCAL           reduce using rule 89 (expresion -> nativas .)
    END             reduce using rule 89 (expresion -> nativas .)
    ELSE            reduce using rule 89 (expresion -> nativas .)
    ELSEIF          reduce using rule 89 (expresion -> nativas .)
    SEMICOLON       reduce using rule 89 (expresion -> nativas .)
    SUFIX           reduce using rule 89 (expresion -> nativas .)
    RPAR            reduce using rule 89 (expresion -> nativas .)
    COMMA           reduce using rule 89 (expresion -> nativas .)
    BRACKETC        reduce using rule 89 (expresion -> nativas .)


state 42

    (90) expresion -> callFunc .

    AND             reduce using rule 90 (expresion -> callFunc .)
    OR              reduce using rule 90 (expresion -> callFunc .)
    SUM             reduce using rule 90 (expresion -> callFunc .)
    RESTA           reduce using rule 90 (expresion -> callFunc .)
    MUL             reduce using rule 90 (expresion -> callFunc .)
    DIV             reduce using rule 90 (expresion -> callFunc .)
    POT             reduce using rule 90 (expresion -> callFunc .)
    MOD             reduce using rule 90 (expresion -> callFunc .)
    DEQUALS         reduce using rule 90 (expresion -> callFunc .)
    DIFF            reduce using rule 90 (expresion -> callFunc .)
    GREATER         reduce using rule 90 (expresion -> callFunc .)
    LESSTHAN        reduce using rule 90 (expresion -> callFunc .)
    GEQ             reduce using rule 90 (expresion -> callFunc .)
    LEQ             reduce using rule 90 (expresion -> callFunc .)
    BREAK           reduce using rule 90 (expresion -> callFunc .)
    CONTINUE        reduce using rule 90 (expresion -> callFunc .)
    IDENTIFICADOR   reduce using rule 90 (expresion -> callFunc .)
    FUNCTION        reduce using rule 90 (expresion -> callFunc .)
    IF              reduce using rule 90 (expresion -> callFunc .)
    WHILE           reduce using rule 90 (expresion -> callFunc .)
    FOR             reduce using rule 90 (expresion -> callFunc .)
    MUTABLE         reduce using rule 90 (expresion -> callFunc .)
    STRUCT          reduce using rule 90 (expresion -> callFunc .)
    PRINT           reduce using rule 90 (expresion -> callFunc .)
    PRINTLN         reduce using rule 90 (expresion -> callFunc .)
    PUSH            reduce using rule 90 (expresion -> callFunc .)
    POP             reduce using rule 90 (expresion -> callFunc .)
    RETURN          reduce using rule 90 (expresion -> callFunc .)
    GLOBAL          reduce using rule 90 (expresion -> callFunc .)
    LOCAL           reduce using rule 90 (expresion -> callFunc .)
    END             reduce using rule 90 (expresion -> callFunc .)
    ELSE            reduce using rule 90 (expresion -> callFunc .)
    ELSEIF          reduce using rule 90 (expresion -> callFunc .)
    SEMICOLON       reduce using rule 90 (expresion -> callFunc .)
    SUFIX           reduce using rule 90 (expresion -> callFunc .)
    RPAR            reduce using rule 90 (expresion -> callFunc .)
    COMMA           reduce using rule 90 (expresion -> callFunc .)
    BRACKETC        reduce using rule 90 (expresion -> callFunc .)


state 43

    (91) expresion -> callArrays .

    AND             reduce using rule 91 (expresion -> callArrays .)
    OR              reduce using rule 91 (expresion -> callArrays .)
    SUM             reduce using rule 91 (expresion -> callArrays .)
    RESTA           reduce using rule 91 (expresion -> callArrays .)
    MUL             reduce using rule 91 (expresion -> callArrays .)
    DIV             reduce using rule 91 (expresion -> callArrays .)
    POT             reduce using rule 91 (expresion -> callArrays .)
    MOD             reduce using rule 91 (expresion -> callArrays .)
    DEQUALS         reduce using rule 91 (expresion -> callArrays .)
    DIFF            reduce using rule 91 (expresion -> callArrays .)
    GREATER         reduce using rule 91 (expresion -> callArrays .)
    LESSTHAN        reduce using rule 91 (expresion -> callArrays .)
    GEQ             reduce using rule 91 (expresion -> callArrays .)
    LEQ             reduce using rule 91 (expresion -> callArrays .)
    BREAK           reduce using rule 91 (expresion -> callArrays .)
    CONTINUE        reduce using rule 91 (expresion -> callArrays .)
    IDENTIFICADOR   reduce using rule 91 (expresion -> callArrays .)
    FUNCTION        reduce using rule 91 (expresion -> callArrays .)
    IF              reduce using rule 91 (expresion -> callArrays .)
    WHILE           reduce using rule 91 (expresion -> callArrays .)
    FOR             reduce using rule 91 (expresion -> callArrays .)
    MUTABLE         reduce using rule 91 (expresion -> callArrays .)
    STRUCT          reduce using rule 91 (expresion -> callArrays .)
    PRINT           reduce using rule 91 (expresion -> callArrays .)
    PRINTLN         reduce using rule 91 (expresion -> callArrays .)
    PUSH            reduce using rule 91 (expresion -> callArrays .)
    POP             reduce using rule 91 (expresion -> callArrays .)
    RETURN          reduce using rule 91 (expresion -> callArrays .)
    GLOBAL          reduce using rule 91 (expresion -> callArrays .)
    LOCAL           reduce using rule 91 (expresion -> callArrays .)
    END             reduce using rule 91 (expresion -> callArrays .)
    ELSE            reduce using rule 91 (expresion -> callArrays .)
    ELSEIF          reduce using rule 91 (expresion -> callArrays .)
    SEMICOLON       reduce using rule 91 (expresion -> callArrays .)
    SUFIX           reduce using rule 91 (expresion -> callArrays .)
    RPAR            reduce using rule 91 (expresion -> callArrays .)
    COMMA           reduce using rule 91 (expresion -> callArrays .)
    BRACKETC        reduce using rule 91 (expresion -> callArrays .)


state 44

    (95) primitivas -> ENTERO .

    AND             reduce using rule 95 (primitivas -> ENTERO .)
    OR              reduce using rule 95 (primitivas -> ENTERO .)
    SUM             reduce using rule 95 (primitivas -> ENTERO .)
    RESTA           reduce using rule 95 (primitivas -> ENTERO .)
    MUL             reduce using rule 95 (primitivas -> ENTERO .)
    DIV             reduce using rule 95 (primitivas -> ENTERO .)
    POT             reduce using rule 95 (primitivas -> ENTERO .)
    MOD             reduce using rule 95 (primitivas -> ENTERO .)
    DEQUALS         reduce using rule 95 (primitivas -> ENTERO .)
    DIFF            reduce using rule 95 (primitivas -> ENTERO .)
    GREATER         reduce using rule 95 (primitivas -> ENTERO .)
    LESSTHAN        reduce using rule 95 (primitivas -> ENTERO .)
    GEQ             reduce using rule 95 (primitivas -> ENTERO .)
    LEQ             reduce using rule 95 (primitivas -> ENTERO .)
    BREAK           reduce using rule 95 (primitivas -> ENTERO .)
    CONTINUE        reduce using rule 95 (primitivas -> ENTERO .)
    IDENTIFICADOR   reduce using rule 95 (primitivas -> ENTERO .)
    FUNCTION        reduce using rule 95 (primitivas -> ENTERO .)
    IF              reduce using rule 95 (primitivas -> ENTERO .)
    WHILE           reduce using rule 95 (primitivas -> ENTERO .)
    FOR             reduce using rule 95 (primitivas -> ENTERO .)
    MUTABLE         reduce using rule 95 (primitivas -> ENTERO .)
    STRUCT          reduce using rule 95 (primitivas -> ENTERO .)
    PRINT           reduce using rule 95 (primitivas -> ENTERO .)
    PRINTLN         reduce using rule 95 (primitivas -> ENTERO .)
    PUSH            reduce using rule 95 (primitivas -> ENTERO .)
    POP             reduce using rule 95 (primitivas -> ENTERO .)
    RETURN          reduce using rule 95 (primitivas -> ENTERO .)
    GLOBAL          reduce using rule 95 (primitivas -> ENTERO .)
    LOCAL           reduce using rule 95 (primitivas -> ENTERO .)
    END             reduce using rule 95 (primitivas -> ENTERO .)
    ELSE            reduce using rule 95 (primitivas -> ENTERO .)
    ELSEIF          reduce using rule 95 (primitivas -> ENTERO .)
    SEMICOLON       reduce using rule 95 (primitivas -> ENTERO .)
    SUFIX           reduce using rule 95 (primitivas -> ENTERO .)
    RPAR            reduce using rule 95 (primitivas -> ENTERO .)
    COMMA           reduce using rule 95 (primitivas -> ENTERO .)
    BRACKETC        reduce using rule 95 (primitivas -> ENTERO .)


state 45

    (96) primitivas -> DECIMAL .

    AND             reduce using rule 96 (primitivas -> DECIMAL .)
    OR              reduce using rule 96 (primitivas -> DECIMAL .)
    SUM             reduce using rule 96 (primitivas -> DECIMAL .)
    RESTA           reduce using rule 96 (primitivas -> DECIMAL .)
    MUL             reduce using rule 96 (primitivas -> DECIMAL .)
    DIV             reduce using rule 96 (primitivas -> DECIMAL .)
    POT             reduce using rule 96 (primitivas -> DECIMAL .)
    MOD             reduce using rule 96 (primitivas -> DECIMAL .)
    DEQUALS         reduce using rule 96 (primitivas -> DECIMAL .)
    DIFF            reduce using rule 96 (primitivas -> DECIMAL .)
    GREATER         reduce using rule 96 (primitivas -> DECIMAL .)
    LESSTHAN        reduce using rule 96 (primitivas -> DECIMAL .)
    GEQ             reduce using rule 96 (primitivas -> DECIMAL .)
    LEQ             reduce using rule 96 (primitivas -> DECIMAL .)
    BREAK           reduce using rule 96 (primitivas -> DECIMAL .)
    CONTINUE        reduce using rule 96 (primitivas -> DECIMAL .)
    IDENTIFICADOR   reduce using rule 96 (primitivas -> DECIMAL .)
    FUNCTION        reduce using rule 96 (primitivas -> DECIMAL .)
    IF              reduce using rule 96 (primitivas -> DECIMAL .)
    WHILE           reduce using rule 96 (primitivas -> DECIMAL .)
    FOR             reduce using rule 96 (primitivas -> DECIMAL .)
    MUTABLE         reduce using rule 96 (primitivas -> DECIMAL .)
    STRUCT          reduce using rule 96 (primitivas -> DECIMAL .)
    PRINT           reduce using rule 96 (primitivas -> DECIMAL .)
    PRINTLN         reduce using rule 96 (primitivas -> DECIMAL .)
    PUSH            reduce using rule 96 (primitivas -> DECIMAL .)
    POP             reduce using rule 96 (primitivas -> DECIMAL .)
    RETURN          reduce using rule 96 (primitivas -> DECIMAL .)
    GLOBAL          reduce using rule 96 (primitivas -> DECIMAL .)
    LOCAL           reduce using rule 96 (primitivas -> DECIMAL .)
    END             reduce using rule 96 (primitivas -> DECIMAL .)
    ELSE            reduce using rule 96 (primitivas -> DECIMAL .)
    ELSEIF          reduce using rule 96 (primitivas -> DECIMAL .)
    SEMICOLON       reduce using rule 96 (primitivas -> DECIMAL .)
    SUFIX           reduce using rule 96 (primitivas -> DECIMAL .)
    RPAR            reduce using rule 96 (primitivas -> DECIMAL .)
    COMMA           reduce using rule 96 (primitivas -> DECIMAL .)
    BRACKETC        reduce using rule 96 (primitivas -> DECIMAL .)


state 46

    (97) primitivas -> FALSE .

    AND             reduce using rule 97 (primitivas -> FALSE .)
    OR              reduce using rule 97 (primitivas -> FALSE .)
    SUM             reduce using rule 97 (primitivas -> FALSE .)
    RESTA           reduce using rule 97 (primitivas -> FALSE .)
    MUL             reduce using rule 97 (primitivas -> FALSE .)
    DIV             reduce using rule 97 (primitivas -> FALSE .)
    POT             reduce using rule 97 (primitivas -> FALSE .)
    MOD             reduce using rule 97 (primitivas -> FALSE .)
    DEQUALS         reduce using rule 97 (primitivas -> FALSE .)
    DIFF            reduce using rule 97 (primitivas -> FALSE .)
    GREATER         reduce using rule 97 (primitivas -> FALSE .)
    LESSTHAN        reduce using rule 97 (primitivas -> FALSE .)
    GEQ             reduce using rule 97 (primitivas -> FALSE .)
    LEQ             reduce using rule 97 (primitivas -> FALSE .)
    BREAK           reduce using rule 97 (primitivas -> FALSE .)
    CONTINUE        reduce using rule 97 (primitivas -> FALSE .)
    IDENTIFICADOR   reduce using rule 97 (primitivas -> FALSE .)
    FUNCTION        reduce using rule 97 (primitivas -> FALSE .)
    IF              reduce using rule 97 (primitivas -> FALSE .)
    WHILE           reduce using rule 97 (primitivas -> FALSE .)
    FOR             reduce using rule 97 (primitivas -> FALSE .)
    MUTABLE         reduce using rule 97 (primitivas -> FALSE .)
    STRUCT          reduce using rule 97 (primitivas -> FALSE .)
    PRINT           reduce using rule 97 (primitivas -> FALSE .)
    PRINTLN         reduce using rule 97 (primitivas -> FALSE .)
    PUSH            reduce using rule 97 (primitivas -> FALSE .)
    POP             reduce using rule 97 (primitivas -> FALSE .)
    RETURN          reduce using rule 97 (primitivas -> FALSE .)
    GLOBAL          reduce using rule 97 (primitivas -> FALSE .)
    LOCAL           reduce using rule 97 (primitivas -> FALSE .)
    END             reduce using rule 97 (primitivas -> FALSE .)
    ELSE            reduce using rule 97 (primitivas -> FALSE .)
    ELSEIF          reduce using rule 97 (primitivas -> FALSE .)
    SEMICOLON       reduce using rule 97 (primitivas -> FALSE .)
    SUFIX           reduce using rule 97 (primitivas -> FALSE .)
    RPAR            reduce using rule 97 (primitivas -> FALSE .)
    COMMA           reduce using rule 97 (primitivas -> FALSE .)
    BRACKETC        reduce using rule 97 (primitivas -> FALSE .)


state 47

    (98) primitivas -> TRUE .

    AND             reduce using rule 98 (primitivas -> TRUE .)
    OR              reduce using rule 98 (primitivas -> TRUE .)
    SUM             reduce using rule 98 (primitivas -> TRUE .)
    RESTA           reduce using rule 98 (primitivas -> TRUE .)
    MUL             reduce using rule 98 (primitivas -> TRUE .)
    DIV             reduce using rule 98 (primitivas -> TRUE .)
    POT             reduce using rule 98 (primitivas -> TRUE .)
    MOD             reduce using rule 98 (primitivas -> TRUE .)
    DEQUALS         reduce using rule 98 (primitivas -> TRUE .)
    DIFF            reduce using rule 98 (primitivas -> TRUE .)
    GREATER         reduce using rule 98 (primitivas -> TRUE .)
    LESSTHAN        reduce using rule 98 (primitivas -> TRUE .)
    GEQ             reduce using rule 98 (primitivas -> TRUE .)
    LEQ             reduce using rule 98 (primitivas -> TRUE .)
    BREAK           reduce using rule 98 (primitivas -> TRUE .)
    CONTINUE        reduce using rule 98 (primitivas -> TRUE .)
    IDENTIFICADOR   reduce using rule 98 (primitivas -> TRUE .)
    FUNCTION        reduce using rule 98 (primitivas -> TRUE .)
    IF              reduce using rule 98 (primitivas -> TRUE .)
    WHILE           reduce using rule 98 (primitivas -> TRUE .)
    FOR             reduce using rule 98 (primitivas -> TRUE .)
    MUTABLE         reduce using rule 98 (primitivas -> TRUE .)
    STRUCT          reduce using rule 98 (primitivas -> TRUE .)
    PRINT           reduce using rule 98 (primitivas -> TRUE .)
    PRINTLN         reduce using rule 98 (primitivas -> TRUE .)
    PUSH            reduce using rule 98 (primitivas -> TRUE .)
    POP             reduce using rule 98 (primitivas -> TRUE .)
    RETURN          reduce using rule 98 (primitivas -> TRUE .)
    GLOBAL          reduce using rule 98 (primitivas -> TRUE .)
    LOCAL           reduce using rule 98 (primitivas -> TRUE .)
    END             reduce using rule 98 (primitivas -> TRUE .)
    ELSE            reduce using rule 98 (primitivas -> TRUE .)
    ELSEIF          reduce using rule 98 (primitivas -> TRUE .)
    SEMICOLON       reduce using rule 98 (primitivas -> TRUE .)
    SUFIX           reduce using rule 98 (primitivas -> TRUE .)
    RPAR            reduce using rule 98 (primitivas -> TRUE .)
    COMMA           reduce using rule 98 (primitivas -> TRUE .)
    BRACKETC        reduce using rule 98 (primitivas -> TRUE .)


state 48

    (99) primitivas -> STRINGLITERAL .

    AND             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    OR              reduce using rule 99 (primitivas -> STRINGLITERAL .)
    SUM             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    RESTA           reduce using rule 99 (primitivas -> STRINGLITERAL .)
    MUL             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    DIV             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    POT             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    MOD             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    DEQUALS         reduce using rule 99 (primitivas -> STRINGLITERAL .)
    DIFF            reduce using rule 99 (primitivas -> STRINGLITERAL .)
    GREATER         reduce using rule 99 (primitivas -> STRINGLITERAL .)
    LESSTHAN        reduce using rule 99 (primitivas -> STRINGLITERAL .)
    GEQ             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    LEQ             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    BREAK           reduce using rule 99 (primitivas -> STRINGLITERAL .)
    CONTINUE        reduce using rule 99 (primitivas -> STRINGLITERAL .)
    IDENTIFICADOR   reduce using rule 99 (primitivas -> STRINGLITERAL .)
    FUNCTION        reduce using rule 99 (primitivas -> STRINGLITERAL .)
    IF              reduce using rule 99 (primitivas -> STRINGLITERAL .)
    WHILE           reduce using rule 99 (primitivas -> STRINGLITERAL .)
    FOR             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    MUTABLE         reduce using rule 99 (primitivas -> STRINGLITERAL .)
    STRUCT          reduce using rule 99 (primitivas -> STRINGLITERAL .)
    PRINT           reduce using rule 99 (primitivas -> STRINGLITERAL .)
    PRINTLN         reduce using rule 99 (primitivas -> STRINGLITERAL .)
    PUSH            reduce using rule 99 (primitivas -> STRINGLITERAL .)
    POP             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    RETURN          reduce using rule 99 (primitivas -> STRINGLITERAL .)
    GLOBAL          reduce using rule 99 (primitivas -> STRINGLITERAL .)
    LOCAL           reduce using rule 99 (primitivas -> STRINGLITERAL .)
    END             reduce using rule 99 (primitivas -> STRINGLITERAL .)
    ELSE            reduce using rule 99 (primitivas -> STRINGLITERAL .)
    ELSEIF          reduce using rule 99 (primitivas -> STRINGLITERAL .)
    SEMICOLON       reduce using rule 99 (primitivas -> STRINGLITERAL .)
    SUFIX           reduce using rule 99 (primitivas -> STRINGLITERAL .)
    RPAR            reduce using rule 99 (primitivas -> STRINGLITERAL .)
    COMMA           reduce using rule 99 (primitivas -> STRINGLITERAL .)
    BRACKETC        reduce using rule 99 (primitivas -> STRINGLITERAL .)


state 49

    (100) primitivas -> CHARLITERAL .

    AND             reduce using rule 100 (primitivas -> CHARLITERAL .)
    OR              reduce using rule 100 (primitivas -> CHARLITERAL .)
    SUM             reduce using rule 100 (primitivas -> CHARLITERAL .)
    RESTA           reduce using rule 100 (primitivas -> CHARLITERAL .)
    MUL             reduce using rule 100 (primitivas -> CHARLITERAL .)
    DIV             reduce using rule 100 (primitivas -> CHARLITERAL .)
    POT             reduce using rule 100 (primitivas -> CHARLITERAL .)
    MOD             reduce using rule 100 (primitivas -> CHARLITERAL .)
    DEQUALS         reduce using rule 100 (primitivas -> CHARLITERAL .)
    DIFF            reduce using rule 100 (primitivas -> CHARLITERAL .)
    GREATER         reduce using rule 100 (primitivas -> CHARLITERAL .)
    LESSTHAN        reduce using rule 100 (primitivas -> CHARLITERAL .)
    GEQ             reduce using rule 100 (primitivas -> CHARLITERAL .)
    LEQ             reduce using rule 100 (primitivas -> CHARLITERAL .)
    BREAK           reduce using rule 100 (primitivas -> CHARLITERAL .)
    CONTINUE        reduce using rule 100 (primitivas -> CHARLITERAL .)
    IDENTIFICADOR   reduce using rule 100 (primitivas -> CHARLITERAL .)
    FUNCTION        reduce using rule 100 (primitivas -> CHARLITERAL .)
    IF              reduce using rule 100 (primitivas -> CHARLITERAL .)
    WHILE           reduce using rule 100 (primitivas -> CHARLITERAL .)
    FOR             reduce using rule 100 (primitivas -> CHARLITERAL .)
    MUTABLE         reduce using rule 100 (primitivas -> CHARLITERAL .)
    STRUCT          reduce using rule 100 (primitivas -> CHARLITERAL .)
    PRINT           reduce using rule 100 (primitivas -> CHARLITERAL .)
    PRINTLN         reduce using rule 100 (primitivas -> CHARLITERAL .)
    PUSH            reduce using rule 100 (primitivas -> CHARLITERAL .)
    POP             reduce using rule 100 (primitivas -> CHARLITERAL .)
    RETURN          reduce using rule 100 (primitivas -> CHARLITERAL .)
    GLOBAL          reduce using rule 100 (primitivas -> CHARLITERAL .)
    LOCAL           reduce using rule 100 (primitivas -> CHARLITERAL .)
    END             reduce using rule 100 (primitivas -> CHARLITERAL .)
    ELSE            reduce using rule 100 (primitivas -> CHARLITERAL .)
    ELSEIF          reduce using rule 100 (primitivas -> CHARLITERAL .)
    SEMICOLON       reduce using rule 100 (primitivas -> CHARLITERAL .)
    SUFIX           reduce using rule 100 (primitivas -> CHARLITERAL .)
    RPAR            reduce using rule 100 (primitivas -> CHARLITERAL .)
    COMMA           reduce using rule 100 (primitivas -> CHARLITERAL .)
    BRACKETC        reduce using rule 100 (primitivas -> CHARLITERAL .)


state 50

    (101) primitivas -> NOTHING .

    AND             reduce using rule 101 (primitivas -> NOTHING .)
    OR              reduce using rule 101 (primitivas -> NOTHING .)
    SUM             reduce using rule 101 (primitivas -> NOTHING .)
    RESTA           reduce using rule 101 (primitivas -> NOTHING .)
    MUL             reduce using rule 101 (primitivas -> NOTHING .)
    DIV             reduce using rule 101 (primitivas -> NOTHING .)
    POT             reduce using rule 101 (primitivas -> NOTHING .)
    MOD             reduce using rule 101 (primitivas -> NOTHING .)
    DEQUALS         reduce using rule 101 (primitivas -> NOTHING .)
    DIFF            reduce using rule 101 (primitivas -> NOTHING .)
    GREATER         reduce using rule 101 (primitivas -> NOTHING .)
    LESSTHAN        reduce using rule 101 (primitivas -> NOTHING .)
    GEQ             reduce using rule 101 (primitivas -> NOTHING .)
    LEQ             reduce using rule 101 (primitivas -> NOTHING .)
    BREAK           reduce using rule 101 (primitivas -> NOTHING .)
    CONTINUE        reduce using rule 101 (primitivas -> NOTHING .)
    IDENTIFICADOR   reduce using rule 101 (primitivas -> NOTHING .)
    FUNCTION        reduce using rule 101 (primitivas -> NOTHING .)
    IF              reduce using rule 101 (primitivas -> NOTHING .)
    WHILE           reduce using rule 101 (primitivas -> NOTHING .)
    FOR             reduce using rule 101 (primitivas -> NOTHING .)
    MUTABLE         reduce using rule 101 (primitivas -> NOTHING .)
    STRUCT          reduce using rule 101 (primitivas -> NOTHING .)
    PRINT           reduce using rule 101 (primitivas -> NOTHING .)
    PRINTLN         reduce using rule 101 (primitivas -> NOTHING .)
    PUSH            reduce using rule 101 (primitivas -> NOTHING .)
    POP             reduce using rule 101 (primitivas -> NOTHING .)
    RETURN          reduce using rule 101 (primitivas -> NOTHING .)
    GLOBAL          reduce using rule 101 (primitivas -> NOTHING .)
    LOCAL           reduce using rule 101 (primitivas -> NOTHING .)
    END             reduce using rule 101 (primitivas -> NOTHING .)
    ELSE            reduce using rule 101 (primitivas -> NOTHING .)
    ELSEIF          reduce using rule 101 (primitivas -> NOTHING .)
    SEMICOLON       reduce using rule 101 (primitivas -> NOTHING .)
    SUFIX           reduce using rule 101 (primitivas -> NOTHING .)
    RPAR            reduce using rule 101 (primitivas -> NOTHING .)
    COMMA           reduce using rule 101 (primitivas -> NOTHING .)
    BRACKETC        reduce using rule 101 (primitivas -> NOTHING .)


state 51

    (102) primitivas -> BRACKETA . BRACKETC
    (103) primitivas -> BRACKETA . items BRACKETC
    (117) items -> . items COMMA expresion
    (118) items -> . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    BRACKETC        shift and go to state 108
    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    items                          shift and go to state 109
    expresion                      shift and go to state 110
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 52

    (104) nativas -> SENO . LPAR expresion RPAR

    LPAR            shift and go to state 111


state 53

    (105) nativas -> COSENO . LPAR expresion RPAR

    LPAR            shift and go to state 112


state 54

    (106) nativas -> LOG . LPAR expresion COMMA expresion RPAR

    LPAR            shift and go to state 113


state 55

    (107) nativas -> LOG10 . LPAR expresion RPAR

    LPAR            shift and go to state 114


state 56

    (108) nativas -> RAIZ . LPAR expresion RPAR

    LPAR            shift and go to state 115


state 57

    (109) nativas -> TANGENTE . LPAR expresion RPAR

    LPAR            shift and go to state 116


state 58

    (110) nativas -> LOWERCASE . LPAR expresion RPAR

    LPAR            shift and go to state 117


state 59

    (111) nativas -> UPPERCASE . LPAR expresion RPAR

    LPAR            shift and go to state 118


state 60

    (112) nativas -> PARSE . LPAR tipo_dato COMMA expresion RPAR

    LPAR            shift and go to state 119


state 61

    (113) nativas -> TRUNC . LPAR tipo_dato COMMA expresion RPAR

    LPAR            shift and go to state 120


state 62

    (114) nativas -> FLOATCAST . LPAR expresion RPAR

    LPAR            shift and go to state 121


state 63

    (115) nativas -> STRINGCAST . LPAR expresion RPAR

    LPAR            shift and go to state 122


state 64

    (116) nativas -> TYPEOF . LPAR expresion RPAR

    LPAR            shift and go to state 123


state 65

    (55) whileST -> WHILE expresion . sentencias END SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion
    (47) sentencias -> . lista_instrucciones
    (48) sentencias -> .
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94
    END             reduce using rule 48 (sentencias -> .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    sentencias                     shift and go to state 124
    lista_instrucciones            shift and go to state 95
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 66

    (56) forST -> FOR IDENTIFICADOR . IN expresion sentencias END SEMICOLON

    IN              shift and go to state 125


state 67

    (59) struct -> MUTABLE STRUCT . IDENTIFICADOR lista_atributos END SEMICOLON

    IDENTIFICADOR   shift and go to state 126


state 68

    (60) struct -> STRUCT IDENTIFICADOR . lista_atributos END SEMICOLON
    (61) lista_atributos -> . lista_atributos IDENTIFICADOR SUFIX tipo_dato SEMICOLON
    (62) lista_atributos -> . lista_atributos IDENTIFICADOR SEMICOLON
    (63) lista_atributos -> . IDENTIFICADOR SUFIX tipo_dato SEMICOLON
    (64) lista_atributos -> . IDENTIFICADOR SEMICOLON

    IDENTIFICADOR   shift and go to state 127

    lista_atributos                shift and go to state 128

state 69

    (65) inst_nativa -> PRINT LPAR . lista_expresion RPAR SEMICOLON
    (57) lista_expresion -> . lista_expresion COMMA expresion
    (58) lista_expresion -> . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    lista_expresion                shift and go to state 129
    expresion                      shift and go to state 77
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 70

    (66) inst_nativa -> PRINTLN LPAR . lista_expresion RPAR SEMICOLON
    (57) lista_expresion -> . lista_expresion COMMA expresion
    (58) lista_expresion -> . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    lista_expresion                shift and go to state 130
    expresion                      shift and go to state 77
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 71

    (67) inst_nativa -> PUSH LPAR . IDENTIFICADOR COMMA expresion RPAR SEMICOLON

    IDENTIFICADOR   shift and go to state 131


state 72

    (68) inst_nativa -> POP LPAR . IDENTIFICADOR COMMA expresion RPAR SEMICOLON

    IDENTIFICADOR   shift and go to state 132


state 73

    (30) asignacion -> IDENTIFICADOR EQUALS expresion . SEMICOLON
    (32) asignacion -> IDENTIFICADOR EQUALS expresion . SUFIX tipo_dato SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    SEMICOLON       shift and go to state 133
    SUFIX           shift and go to state 134
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 74

    (33) asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 135


state 75

    (45) callFunc -> IDENTIFICADOR LPAR RPAR .

    SEMICOLON       reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    AND             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    OR              reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    SUM             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    RESTA           reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    MUL             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    DIV             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    POT             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    MOD             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    DEQUALS         reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    DIFF            reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    GREATER         reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    LESSTHAN        reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    GEQ             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    LEQ             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    BREAK           reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    CONTINUE        reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    IDENTIFICADOR   reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    FUNCTION        reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    IF              reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    WHILE           reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    FOR             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    MUTABLE         reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    STRUCT          reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    PRINT           reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    PRINTLN         reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    PUSH            reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    POP             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    RETURN          reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    GLOBAL          reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    LOCAL           reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    END             reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    ELSE            reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    ELSEIF          reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    SUFIX           reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    RPAR            reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    COMMA           reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)
    BRACKETC        reduce using rule 45 (callFunc -> IDENTIFICADOR LPAR RPAR .)


state 76

    (46) callFunc -> IDENTIFICADOR LPAR lista_expresion . RPAR
    (57) lista_expresion -> lista_expresion . COMMA expresion

    RPAR            shift and go to state 136
    COMMA           shift and go to state 137


state 77

    (58) lista_expresion -> expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            reduce using rule 58 (lista_expresion -> expresion .)
    COMMA           reduce using rule 58 (lista_expresion -> expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 78

    (31) asignacion -> tipoVariable IDENTIFICADOR EQUALS . expresion SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 138
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 79

    (13) declareFunction -> FUNCTION IDENTIFICADOR LPAR . lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> FUNCTION IDENTIFICADOR LPAR . RPAR END SEMICOLON
    (15) declareFunction -> FUNCTION IDENTIFICADOR LPAR . RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> FUNCTION IDENTIFICADOR LPAR . lista_parametros RPAR END SEMICOLON
    (26) lista_parametros -> . lista_parametros COMMA IDENTIFICADOR
    (27) lista_parametros -> . lista_parametros COMMA IDENTIFICADOR SUFIX tipo_dato
    (28) lista_parametros -> . IDENTIFICADOR SUFIX tipo_dato
    (29) lista_parametros -> . IDENTIFICADOR

    RPAR            shift and go to state 141
    IDENTIFICADOR   shift and go to state 139

    lista_parametros               shift and go to state 140

state 80

    (49) condicional -> IF expresion sentencias . END SEMICOLON
    (50) condicional -> IF expresion sentencias . ELSE sentencias END SEMICOLON
    (51) condicional -> IF expresion sentencias . elseifList END SEMICOLON
    (52) condicional -> IF expresion sentencias . elseifList ELSE sentencias END SEMICOLON
    (53) elseifList -> . elseifList ELSEIF expresion sentencias
    (54) elseifList -> . ELSEIF expresion sentencias

    END             shift and go to state 142
    ELSE            shift and go to state 143
    ELSEIF          shift and go to state 145

    elseifList                     shift and go to state 144

state 81

    (71) expresion -> expresion AND . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 146
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 82

    (72) expresion -> expresion OR . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 147
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 83

    (73) expresion -> expresion SUM . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 148
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 84

    (74) expresion -> expresion RESTA . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 149
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 85

    (75) expresion -> expresion MUL . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 150
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 86

    (76) expresion -> expresion DIV . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 151
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 87

    (77) expresion -> expresion POT . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 152
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 88

    (78) expresion -> expresion MOD . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 153
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 89

    (79) expresion -> expresion DEQUALS . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 154
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 90

    (80) expresion -> expresion DIFF . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 155
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 91

    (81) expresion -> expresion GREATER . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 156
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 92

    (82) expresion -> expresion LESSTHAN . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 157
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 93

    (83) expresion -> expresion GEQ . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 158
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 94

    (84) expresion -> expresion LEQ . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 159
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 95

    (47) sentencias -> lista_instrucciones .
    (17) lista_instrucciones -> lista_instrucciones . instruccion
    (18) lista_instrucciones -> lista_instrucciones . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    END             reduce using rule 47 (sentencias -> lista_instrucciones .)
    ELSE            reduce using rule 47 (sentencias -> lista_instrucciones .)
    ELSEIF          reduce using rule 47 (sentencias -> lista_instrucciones .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    instruccion                    shift and go to state 160
    transferencia                  shift and go to state 161
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 96

    (19) lista_instrucciones -> instruccion .

    BREAK           reduce using rule 19 (lista_instrucciones -> instruccion .)
    CONTINUE        reduce using rule 19 (lista_instrucciones -> instruccion .)
    IDENTIFICADOR   reduce using rule 19 (lista_instrucciones -> instruccion .)
    FUNCTION        reduce using rule 19 (lista_instrucciones -> instruccion .)
    IF              reduce using rule 19 (lista_instrucciones -> instruccion .)
    WHILE           reduce using rule 19 (lista_instrucciones -> instruccion .)
    FOR             reduce using rule 19 (lista_instrucciones -> instruccion .)
    MUTABLE         reduce using rule 19 (lista_instrucciones -> instruccion .)
    STRUCT          reduce using rule 19 (lista_instrucciones -> instruccion .)
    PRINT           reduce using rule 19 (lista_instrucciones -> instruccion .)
    PRINTLN         reduce using rule 19 (lista_instrucciones -> instruccion .)
    PUSH            reduce using rule 19 (lista_instrucciones -> instruccion .)
    POP             reduce using rule 19 (lista_instrucciones -> instruccion .)
    RETURN          reduce using rule 19 (lista_instrucciones -> instruccion .)
    GLOBAL          reduce using rule 19 (lista_instrucciones -> instruccion .)
    LOCAL           reduce using rule 19 (lista_instrucciones -> instruccion .)
    END             reduce using rule 19 (lista_instrucciones -> instruccion .)
    ELSE            reduce using rule 19 (lista_instrucciones -> instruccion .)
    ELSEIF          reduce using rule 19 (lista_instrucciones -> instruccion .)


state 97

    (20) lista_instrucciones -> transferencia .

    BREAK           reduce using rule 20 (lista_instrucciones -> transferencia .)
    CONTINUE        reduce using rule 20 (lista_instrucciones -> transferencia .)
    IDENTIFICADOR   reduce using rule 20 (lista_instrucciones -> transferencia .)
    FUNCTION        reduce using rule 20 (lista_instrucciones -> transferencia .)
    IF              reduce using rule 20 (lista_instrucciones -> transferencia .)
    WHILE           reduce using rule 20 (lista_instrucciones -> transferencia .)
    FOR             reduce using rule 20 (lista_instrucciones -> transferencia .)
    MUTABLE         reduce using rule 20 (lista_instrucciones -> transferencia .)
    STRUCT          reduce using rule 20 (lista_instrucciones -> transferencia .)
    PRINT           reduce using rule 20 (lista_instrucciones -> transferencia .)
    PRINTLN         reduce using rule 20 (lista_instrucciones -> transferencia .)
    PUSH            reduce using rule 20 (lista_instrucciones -> transferencia .)
    POP             reduce using rule 20 (lista_instrucciones -> transferencia .)
    RETURN          reduce using rule 20 (lista_instrucciones -> transferencia .)
    GLOBAL          reduce using rule 20 (lista_instrucciones -> transferencia .)
    LOCAL           reduce using rule 20 (lista_instrucciones -> transferencia .)
    END             reduce using rule 20 (lista_instrucciones -> transferencia .)
    ELSE            reduce using rule 20 (lista_instrucciones -> transferencia .)
    ELSEIF          reduce using rule 20 (lista_instrucciones -> transferencia .)


state 98

    (21) transferencia -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 162


state 99

    (22) transferencia -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 163


state 100

    (23) transferencia -> returnValue . SEMICOLON

    SEMICOLON       shift and go to state 164


state 101

    (24) returnValue -> RETURN . expresion
    (25) returnValue -> RETURN .
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    SEMICOLON       reduce using rule 25 (returnValue -> RETURN .)
    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 165
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 102

    (69) expresion -> RESTA expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 69 (expresion -> RESTA expresion .)
    OR              reduce using rule 69 (expresion -> RESTA expresion .)
    SUM             reduce using rule 69 (expresion -> RESTA expresion .)
    RESTA           reduce using rule 69 (expresion -> RESTA expresion .)
    MUL             reduce using rule 69 (expresion -> RESTA expresion .)
    DIV             reduce using rule 69 (expresion -> RESTA expresion .)
    POT             reduce using rule 69 (expresion -> RESTA expresion .)
    MOD             reduce using rule 69 (expresion -> RESTA expresion .)
    DEQUALS         reduce using rule 69 (expresion -> RESTA expresion .)
    DIFF            reduce using rule 69 (expresion -> RESTA expresion .)
    GREATER         reduce using rule 69 (expresion -> RESTA expresion .)
    LESSTHAN        reduce using rule 69 (expresion -> RESTA expresion .)
    GEQ             reduce using rule 69 (expresion -> RESTA expresion .)
    LEQ             reduce using rule 69 (expresion -> RESTA expresion .)
    BREAK           reduce using rule 69 (expresion -> RESTA expresion .)
    CONTINUE        reduce using rule 69 (expresion -> RESTA expresion .)
    IDENTIFICADOR   reduce using rule 69 (expresion -> RESTA expresion .)
    FUNCTION        reduce using rule 69 (expresion -> RESTA expresion .)
    IF              reduce using rule 69 (expresion -> RESTA expresion .)
    WHILE           reduce using rule 69 (expresion -> RESTA expresion .)
    FOR             reduce using rule 69 (expresion -> RESTA expresion .)
    MUTABLE         reduce using rule 69 (expresion -> RESTA expresion .)
    STRUCT          reduce using rule 69 (expresion -> RESTA expresion .)
    PRINT           reduce using rule 69 (expresion -> RESTA expresion .)
    PRINTLN         reduce using rule 69 (expresion -> RESTA expresion .)
    PUSH            reduce using rule 69 (expresion -> RESTA expresion .)
    POP             reduce using rule 69 (expresion -> RESTA expresion .)
    RETURN          reduce using rule 69 (expresion -> RESTA expresion .)
    GLOBAL          reduce using rule 69 (expresion -> RESTA expresion .)
    LOCAL           reduce using rule 69 (expresion -> RESTA expresion .)
    END             reduce using rule 69 (expresion -> RESTA expresion .)
    ELSE            reduce using rule 69 (expresion -> RESTA expresion .)
    ELSEIF          reduce using rule 69 (expresion -> RESTA expresion .)
    SEMICOLON       reduce using rule 69 (expresion -> RESTA expresion .)
    SUFIX           reduce using rule 69 (expresion -> RESTA expresion .)
    RPAR            reduce using rule 69 (expresion -> RESTA expresion .)
    COMMA           reduce using rule 69 (expresion -> RESTA expresion .)
    BRACKETC        reduce using rule 69 (expresion -> RESTA expresion .)

  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! MUL             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! POT             [ shift and go to state 87 ]
  ! MOD             [ shift and go to state 88 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 103

    (70) expresion -> NOT expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 70 (expresion -> NOT expresion .)
    OR              reduce using rule 70 (expresion -> NOT expresion .)
    SUM             reduce using rule 70 (expresion -> NOT expresion .)
    RESTA           reduce using rule 70 (expresion -> NOT expresion .)
    MUL             reduce using rule 70 (expresion -> NOT expresion .)
    DIV             reduce using rule 70 (expresion -> NOT expresion .)
    MOD             reduce using rule 70 (expresion -> NOT expresion .)
    DEQUALS         reduce using rule 70 (expresion -> NOT expresion .)
    DIFF            reduce using rule 70 (expresion -> NOT expresion .)
    GREATER         reduce using rule 70 (expresion -> NOT expresion .)
    LESSTHAN        reduce using rule 70 (expresion -> NOT expresion .)
    GEQ             reduce using rule 70 (expresion -> NOT expresion .)
    LEQ             reduce using rule 70 (expresion -> NOT expresion .)
    BREAK           reduce using rule 70 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 70 (expresion -> NOT expresion .)
    IDENTIFICADOR   reduce using rule 70 (expresion -> NOT expresion .)
    FUNCTION        reduce using rule 70 (expresion -> NOT expresion .)
    IF              reduce using rule 70 (expresion -> NOT expresion .)
    WHILE           reduce using rule 70 (expresion -> NOT expresion .)
    FOR             reduce using rule 70 (expresion -> NOT expresion .)
    MUTABLE         reduce using rule 70 (expresion -> NOT expresion .)
    STRUCT          reduce using rule 70 (expresion -> NOT expresion .)
    PRINT           reduce using rule 70 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 70 (expresion -> NOT expresion .)
    PUSH            reduce using rule 70 (expresion -> NOT expresion .)
    POP             reduce using rule 70 (expresion -> NOT expresion .)
    RETURN          reduce using rule 70 (expresion -> NOT expresion .)
    GLOBAL          reduce using rule 70 (expresion -> NOT expresion .)
    LOCAL           reduce using rule 70 (expresion -> NOT expresion .)
    END             reduce using rule 70 (expresion -> NOT expresion .)
    ELSE            reduce using rule 70 (expresion -> NOT expresion .)
    ELSEIF          reduce using rule 70 (expresion -> NOT expresion .)
    SEMICOLON       reduce using rule 70 (expresion -> NOT expresion .)
    SUFIX           reduce using rule 70 (expresion -> NOT expresion .)
    RPAR            reduce using rule 70 (expresion -> NOT expresion .)
    COMMA           reduce using rule 70 (expresion -> NOT expresion .)
    BRACKETC        reduce using rule 70 (expresion -> NOT expresion .)
    POT             shift and go to state 87

  ! POT             [ reduce using rule 70 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! MUL             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! MOD             [ shift and go to state 88 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 104

    (86) expresion -> IDENTIFICADOR PUNTO . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 166


state 105

    (92) callArrays -> IDENTIFICADOR dimensiones .
    (93) dimensiones -> dimensiones . BRACKETA expresion BRACKETC

    AND             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    OR              reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    SUM             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    RESTA           reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    MUL             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    DIV             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    POT             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    MOD             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    DEQUALS         reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    DIFF            reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    GREATER         reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    LESSTHAN        reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    GEQ             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    LEQ             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    BREAK           reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    CONTINUE        reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    IDENTIFICADOR   reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    FUNCTION        reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    IF              reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    WHILE           reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    FOR             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    MUTABLE         reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    STRUCT          reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    PRINT           reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    PRINTLN         reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    PUSH            reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    POP             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    RETURN          reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    GLOBAL          reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    LOCAL           reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    END             reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    ELSE            reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    ELSEIF          reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    SEMICOLON       reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    SUFIX           reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    RPAR            reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    COMMA           reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    BRACKETC        reduce using rule 92 (callArrays -> IDENTIFICADOR dimensiones .)
    BRACKETA        shift and go to state 167


state 106

    (94) dimensiones -> BRACKETA . expresion BRACKETC
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 168
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 107

    (87) expresion -> LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 169
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 108

    (102) primitivas -> BRACKETA BRACKETC .

    AND             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    OR              reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    SUM             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    RESTA           reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    MUL             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    DIV             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    POT             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    MOD             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    DEQUALS         reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    DIFF            reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    GREATER         reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    LESSTHAN        reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    GEQ             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    LEQ             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    BREAK           reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    CONTINUE        reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    IDENTIFICADOR   reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    FUNCTION        reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    IF              reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    WHILE           reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    FOR             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    MUTABLE         reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    STRUCT          reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    PRINT           reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    PRINTLN         reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    PUSH            reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    POP             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    RETURN          reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    GLOBAL          reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    LOCAL           reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    END             reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    ELSE            reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    ELSEIF          reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    SEMICOLON       reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    SUFIX           reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    RPAR            reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    COMMA           reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)
    BRACKETC        reduce using rule 102 (primitivas -> BRACKETA BRACKETC .)


state 109

    (103) primitivas -> BRACKETA items . BRACKETC
    (117) items -> items . COMMA expresion

    BRACKETC        shift and go to state 170
    COMMA           shift and go to state 171


state 110

    (118) items -> expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    BRACKETC        reduce using rule 118 (items -> expresion .)
    COMMA           reduce using rule 118 (items -> expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 111

    (104) nativas -> SENO LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 172
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 112

    (105) nativas -> COSENO LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 173
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 113

    (106) nativas -> LOG LPAR . expresion COMMA expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 174
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 114

    (107) nativas -> LOG10 LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 175
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 115

    (108) nativas -> RAIZ LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 176
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 116

    (109) nativas -> TANGENTE LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 177
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 117

    (110) nativas -> LOWERCASE LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 178
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 118

    (111) nativas -> UPPERCASE LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 179
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 119

    (112) nativas -> PARSE LPAR . tipo_dato COMMA expresion RPAR
    (36) tipo_dato -> . INT64
    (37) tipo_dato -> . FLOAT64
    (38) tipo_dato -> . BOOL
    (39) tipo_dato -> . CHAR
    (40) tipo_dato -> . STRING
    (41) tipo_dato -> . ARRAY
    (42) tipo_dato -> . NOTHING
    (43) tipo_dato -> . IDENTIFICADOR

    INT64           shift and go to state 181
    FLOAT64         shift and go to state 182
    BOOL            shift and go to state 183
    CHAR            shift and go to state 184
    STRING          shift and go to state 185
    ARRAY           shift and go to state 186
    NOTHING         shift and go to state 187
    IDENTIFICADOR   shift and go to state 188

    tipo_dato                      shift and go to state 180

state 120

    (113) nativas -> TRUNC LPAR . tipo_dato COMMA expresion RPAR
    (36) tipo_dato -> . INT64
    (37) tipo_dato -> . FLOAT64
    (38) tipo_dato -> . BOOL
    (39) tipo_dato -> . CHAR
    (40) tipo_dato -> . STRING
    (41) tipo_dato -> . ARRAY
    (42) tipo_dato -> . NOTHING
    (43) tipo_dato -> . IDENTIFICADOR

    INT64           shift and go to state 181
    FLOAT64         shift and go to state 182
    BOOL            shift and go to state 183
    CHAR            shift and go to state 184
    STRING          shift and go to state 185
    ARRAY           shift and go to state 186
    NOTHING         shift and go to state 187
    IDENTIFICADOR   shift and go to state 188

    tipo_dato                      shift and go to state 189

state 121

    (114) nativas -> FLOATCAST LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 190
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 122

    (115) nativas -> STRINGCAST LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 191
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 123

    (116) nativas -> TYPEOF LPAR . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 192
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 124

    (55) whileST -> WHILE expresion sentencias . END SEMICOLON

    END             shift and go to state 193


state 125

    (56) forST -> FOR IDENTIFICADOR IN . expresion sentencias END SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 194
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 126

    (59) struct -> MUTABLE STRUCT IDENTIFICADOR . lista_atributos END SEMICOLON
    (61) lista_atributos -> . lista_atributos IDENTIFICADOR SUFIX tipo_dato SEMICOLON
    (62) lista_atributos -> . lista_atributos IDENTIFICADOR SEMICOLON
    (63) lista_atributos -> . IDENTIFICADOR SUFIX tipo_dato SEMICOLON
    (64) lista_atributos -> . IDENTIFICADOR SEMICOLON

    IDENTIFICADOR   shift and go to state 127

    lista_atributos                shift and go to state 195

state 127

    (63) lista_atributos -> IDENTIFICADOR . SUFIX tipo_dato SEMICOLON
    (64) lista_atributos -> IDENTIFICADOR . SEMICOLON

    SUFIX           shift and go to state 196
    SEMICOLON       shift and go to state 197


state 128

    (60) struct -> STRUCT IDENTIFICADOR lista_atributos . END SEMICOLON
    (61) lista_atributos -> lista_atributos . IDENTIFICADOR SUFIX tipo_dato SEMICOLON
    (62) lista_atributos -> lista_atributos . IDENTIFICADOR SEMICOLON

    END             shift and go to state 199
    IDENTIFICADOR   shift and go to state 198


state 129

    (65) inst_nativa -> PRINT LPAR lista_expresion . RPAR SEMICOLON
    (57) lista_expresion -> lista_expresion . COMMA expresion

    RPAR            shift and go to state 200
    COMMA           shift and go to state 137


state 130

    (66) inst_nativa -> PRINTLN LPAR lista_expresion . RPAR SEMICOLON
    (57) lista_expresion -> lista_expresion . COMMA expresion

    RPAR            shift and go to state 201
    COMMA           shift and go to state 137


state 131

    (67) inst_nativa -> PUSH LPAR IDENTIFICADOR . COMMA expresion RPAR SEMICOLON

    COMMA           shift and go to state 202


state 132

    (68) inst_nativa -> POP LPAR IDENTIFICADOR . COMMA expresion RPAR SEMICOLON

    COMMA           shift and go to state 203


state 133

    (30) asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .

    IDENTIFICADOR   reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    FUNCTION        reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    IF              reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    MUTABLE         reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    STRUCT          reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PRINTLN         reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PUSH            reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    POP             reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    GLOBAL          reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    LOCAL           reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    $end            reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    BREAK           reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    CONTINUE        reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    END             reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)
    ELSEIF          reduce using rule 30 (asignacion -> IDENTIFICADOR EQUALS expresion SEMICOLON .)


state 134

    (32) asignacion -> IDENTIFICADOR EQUALS expresion SUFIX . tipo_dato SEMICOLON
    (36) tipo_dato -> . INT64
    (37) tipo_dato -> . FLOAT64
    (38) tipo_dato -> . BOOL
    (39) tipo_dato -> . CHAR
    (40) tipo_dato -> . STRING
    (41) tipo_dato -> . ARRAY
    (42) tipo_dato -> . NOTHING
    (43) tipo_dato -> . IDENTIFICADOR

    INT64           shift and go to state 181
    FLOAT64         shift and go to state 182
    BOOL            shift and go to state 183
    CHAR            shift and go to state 184
    STRING          shift and go to state 185
    ARRAY           shift and go to state 186
    NOTHING         shift and go to state 187
    IDENTIFICADOR   shift and go to state 188

    tipo_dato                      shift and go to state 204

state 135

    (33) asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS . expresion SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 205
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 136

    (46) callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .

    SEMICOLON       reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    AND             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    OR              reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    SUM             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    RESTA           reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    MUL             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    DIV             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    POT             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    MOD             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    DEQUALS         reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    DIFF            reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    GREATER         reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    LESSTHAN        reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    GEQ             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    LEQ             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    BREAK           reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    CONTINUE        reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    IDENTIFICADOR   reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    FUNCTION        reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    IF              reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    WHILE           reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    FOR             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    MUTABLE         reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    STRUCT          reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    PRINT           reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    PRINTLN         reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    PUSH            reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    POP             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    RETURN          reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    GLOBAL          reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    LOCAL           reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    END             reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    ELSE            reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    ELSEIF          reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    SUFIX           reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    RPAR            reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    COMMA           reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)
    BRACKETC        reduce using rule 46 (callFunc -> IDENTIFICADOR LPAR lista_expresion RPAR .)


state 137

    (57) lista_expresion -> lista_expresion COMMA . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 206
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 138

    (31) asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion . SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    SEMICOLON       shift and go to state 207
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 139

    (28) lista_parametros -> IDENTIFICADOR . SUFIX tipo_dato
    (29) lista_parametros -> IDENTIFICADOR .

    SUFIX           shift and go to state 208
    RPAR            reduce using rule 29 (lista_parametros -> IDENTIFICADOR .)
    COMMA           reduce using rule 29 (lista_parametros -> IDENTIFICADOR .)


state 140

    (13) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros . RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros . RPAR END SEMICOLON
    (26) lista_parametros -> lista_parametros . COMMA IDENTIFICADOR
    (27) lista_parametros -> lista_parametros . COMMA IDENTIFICADOR SUFIX tipo_dato

    RPAR            shift and go to state 209
    COMMA           shift and go to state 210


state 141

    (14) declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR . END SEMICOLON
    (15) declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR . lista_instrucciones END SEMICOLON
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    END             shift and go to state 211
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    lista_instrucciones            shift and go to state 212
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 142

    (49) condicional -> IF expresion sentencias END . SEMICOLON

    SEMICOLON       shift and go to state 213


state 143

    (50) condicional -> IF expresion sentencias ELSE . sentencias END SEMICOLON
    (47) sentencias -> . lista_instrucciones
    (48) sentencias -> .
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    END             reduce using rule 48 (sentencias -> .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    sentencias                     shift and go to state 214
    lista_instrucciones            shift and go to state 95
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 144

    (51) condicional -> IF expresion sentencias elseifList . END SEMICOLON
    (52) condicional -> IF expresion sentencias elseifList . ELSE sentencias END SEMICOLON
    (53) elseifList -> elseifList . ELSEIF expresion sentencias

    END             shift and go to state 215
    ELSE            shift and go to state 216
    ELSEIF          shift and go to state 217


state 145

    (54) elseifList -> ELSEIF . expresion sentencias
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 218
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 146

    (71) expresion -> expresion AND expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 71 (expresion -> expresion AND expresion .)
    OR              reduce using rule 71 (expresion -> expresion AND expresion .)
    DEQUALS         reduce using rule 71 (expresion -> expresion AND expresion .)
    DIFF            reduce using rule 71 (expresion -> expresion AND expresion .)
    GREATER         reduce using rule 71 (expresion -> expresion AND expresion .)
    LESSTHAN        reduce using rule 71 (expresion -> expresion AND expresion .)
    GEQ             reduce using rule 71 (expresion -> expresion AND expresion .)
    LEQ             reduce using rule 71 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 71 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 71 (expresion -> expresion AND expresion .)
    IDENTIFICADOR   reduce using rule 71 (expresion -> expresion AND expresion .)
    FUNCTION        reduce using rule 71 (expresion -> expresion AND expresion .)
    IF              reduce using rule 71 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 71 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 71 (expresion -> expresion AND expresion .)
    MUTABLE         reduce using rule 71 (expresion -> expresion AND expresion .)
    STRUCT          reduce using rule 71 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 71 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 71 (expresion -> expresion AND expresion .)
    PUSH            reduce using rule 71 (expresion -> expresion AND expresion .)
    POP             reduce using rule 71 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 71 (expresion -> expresion AND expresion .)
    GLOBAL          reduce using rule 71 (expresion -> expresion AND expresion .)
    LOCAL           reduce using rule 71 (expresion -> expresion AND expresion .)
    END             reduce using rule 71 (expresion -> expresion AND expresion .)
    ELSE            reduce using rule 71 (expresion -> expresion AND expresion .)
    ELSEIF          reduce using rule 71 (expresion -> expresion AND expresion .)
    SEMICOLON       reduce using rule 71 (expresion -> expresion AND expresion .)
    SUFIX           reduce using rule 71 (expresion -> expresion AND expresion .)
    RPAR            reduce using rule 71 (expresion -> expresion AND expresion .)
    COMMA           reduce using rule 71 (expresion -> expresion AND expresion .)
    BRACKETC        reduce using rule 71 (expresion -> expresion AND expresion .)
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! SUM             [ reduce using rule 71 (expresion -> expresion AND expresion .) ]
  ! RESTA           [ reduce using rule 71 (expresion -> expresion AND expresion .) ]
  ! MUL             [ reduce using rule 71 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 71 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 71 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 71 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 147

    (72) expresion -> expresion OR expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 72 (expresion -> expresion OR expresion .)
    OR              reduce using rule 72 (expresion -> expresion OR expresion .)
    DEQUALS         reduce using rule 72 (expresion -> expresion OR expresion .)
    DIFF            reduce using rule 72 (expresion -> expresion OR expresion .)
    GREATER         reduce using rule 72 (expresion -> expresion OR expresion .)
    LESSTHAN        reduce using rule 72 (expresion -> expresion OR expresion .)
    GEQ             reduce using rule 72 (expresion -> expresion OR expresion .)
    LEQ             reduce using rule 72 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 72 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 72 (expresion -> expresion OR expresion .)
    IDENTIFICADOR   reduce using rule 72 (expresion -> expresion OR expresion .)
    FUNCTION        reduce using rule 72 (expresion -> expresion OR expresion .)
    IF              reduce using rule 72 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 72 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 72 (expresion -> expresion OR expresion .)
    MUTABLE         reduce using rule 72 (expresion -> expresion OR expresion .)
    STRUCT          reduce using rule 72 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 72 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 72 (expresion -> expresion OR expresion .)
    PUSH            reduce using rule 72 (expresion -> expresion OR expresion .)
    POP             reduce using rule 72 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 72 (expresion -> expresion OR expresion .)
    GLOBAL          reduce using rule 72 (expresion -> expresion OR expresion .)
    LOCAL           reduce using rule 72 (expresion -> expresion OR expresion .)
    END             reduce using rule 72 (expresion -> expresion OR expresion .)
    ELSE            reduce using rule 72 (expresion -> expresion OR expresion .)
    ELSEIF          reduce using rule 72 (expresion -> expresion OR expresion .)
    SEMICOLON       reduce using rule 72 (expresion -> expresion OR expresion .)
    SUFIX           reduce using rule 72 (expresion -> expresion OR expresion .)
    RPAR            reduce using rule 72 (expresion -> expresion OR expresion .)
    COMMA           reduce using rule 72 (expresion -> expresion OR expresion .)
    BRACKETC        reduce using rule 72 (expresion -> expresion OR expresion .)
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! SUM             [ reduce using rule 72 (expresion -> expresion OR expresion .) ]
  ! RESTA           [ reduce using rule 72 (expresion -> expresion OR expresion .) ]
  ! MUL             [ reduce using rule 72 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 72 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 72 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 72 (expresion -> expresion OR expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 148

    (73) expresion -> expresion SUM expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 73 (expresion -> expresion SUM expresion .)
    OR              reduce using rule 73 (expresion -> expresion SUM expresion .)
    SUM             reduce using rule 73 (expresion -> expresion SUM expresion .)
    RESTA           reduce using rule 73 (expresion -> expresion SUM expresion .)
    DEQUALS         reduce using rule 73 (expresion -> expresion SUM expresion .)
    DIFF            reduce using rule 73 (expresion -> expresion SUM expresion .)
    GREATER         reduce using rule 73 (expresion -> expresion SUM expresion .)
    LESSTHAN        reduce using rule 73 (expresion -> expresion SUM expresion .)
    GEQ             reduce using rule 73 (expresion -> expresion SUM expresion .)
    LEQ             reduce using rule 73 (expresion -> expresion SUM expresion .)
    BREAK           reduce using rule 73 (expresion -> expresion SUM expresion .)
    CONTINUE        reduce using rule 73 (expresion -> expresion SUM expresion .)
    IDENTIFICADOR   reduce using rule 73 (expresion -> expresion SUM expresion .)
    FUNCTION        reduce using rule 73 (expresion -> expresion SUM expresion .)
    IF              reduce using rule 73 (expresion -> expresion SUM expresion .)
    WHILE           reduce using rule 73 (expresion -> expresion SUM expresion .)
    FOR             reduce using rule 73 (expresion -> expresion SUM expresion .)
    MUTABLE         reduce using rule 73 (expresion -> expresion SUM expresion .)
    STRUCT          reduce using rule 73 (expresion -> expresion SUM expresion .)
    PRINT           reduce using rule 73 (expresion -> expresion SUM expresion .)
    PRINTLN         reduce using rule 73 (expresion -> expresion SUM expresion .)
    PUSH            reduce using rule 73 (expresion -> expresion SUM expresion .)
    POP             reduce using rule 73 (expresion -> expresion SUM expresion .)
    RETURN          reduce using rule 73 (expresion -> expresion SUM expresion .)
    GLOBAL          reduce using rule 73 (expresion -> expresion SUM expresion .)
    LOCAL           reduce using rule 73 (expresion -> expresion SUM expresion .)
    END             reduce using rule 73 (expresion -> expresion SUM expresion .)
    ELSE            reduce using rule 73 (expresion -> expresion SUM expresion .)
    ELSEIF          reduce using rule 73 (expresion -> expresion SUM expresion .)
    SEMICOLON       reduce using rule 73 (expresion -> expresion SUM expresion .)
    SUFIX           reduce using rule 73 (expresion -> expresion SUM expresion .)
    RPAR            reduce using rule 73 (expresion -> expresion SUM expresion .)
    COMMA           reduce using rule 73 (expresion -> expresion SUM expresion .)
    BRACKETC        reduce using rule 73 (expresion -> expresion SUM expresion .)
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! MUL             [ reduce using rule 73 (expresion -> expresion SUM expresion .) ]
  ! DIV             [ reduce using rule 73 (expresion -> expresion SUM expresion .) ]
  ! POT             [ reduce using rule 73 (expresion -> expresion SUM expresion .) ]
  ! MOD             [ reduce using rule 73 (expresion -> expresion SUM expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 149

    (74) expresion -> expresion RESTA expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 74 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 74 (expresion -> expresion RESTA expresion .)
    SUM             reduce using rule 74 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 74 (expresion -> expresion RESTA expresion .)
    DEQUALS         reduce using rule 74 (expresion -> expresion RESTA expresion .)
    DIFF            reduce using rule 74 (expresion -> expresion RESTA expresion .)
    GREATER         reduce using rule 74 (expresion -> expresion RESTA expresion .)
    LESSTHAN        reduce using rule 74 (expresion -> expresion RESTA expresion .)
    GEQ             reduce using rule 74 (expresion -> expresion RESTA expresion .)
    LEQ             reduce using rule 74 (expresion -> expresion RESTA expresion .)
    BREAK           reduce using rule 74 (expresion -> expresion RESTA expresion .)
    CONTINUE        reduce using rule 74 (expresion -> expresion RESTA expresion .)
    IDENTIFICADOR   reduce using rule 74 (expresion -> expresion RESTA expresion .)
    FUNCTION        reduce using rule 74 (expresion -> expresion RESTA expresion .)
    IF              reduce using rule 74 (expresion -> expresion RESTA expresion .)
    WHILE           reduce using rule 74 (expresion -> expresion RESTA expresion .)
    FOR             reduce using rule 74 (expresion -> expresion RESTA expresion .)
    MUTABLE         reduce using rule 74 (expresion -> expresion RESTA expresion .)
    STRUCT          reduce using rule 74 (expresion -> expresion RESTA expresion .)
    PRINT           reduce using rule 74 (expresion -> expresion RESTA expresion .)
    PRINTLN         reduce using rule 74 (expresion -> expresion RESTA expresion .)
    PUSH            reduce using rule 74 (expresion -> expresion RESTA expresion .)
    POP             reduce using rule 74 (expresion -> expresion RESTA expresion .)
    RETURN          reduce using rule 74 (expresion -> expresion RESTA expresion .)
    GLOBAL          reduce using rule 74 (expresion -> expresion RESTA expresion .)
    LOCAL           reduce using rule 74 (expresion -> expresion RESTA expresion .)
    END             reduce using rule 74 (expresion -> expresion RESTA expresion .)
    ELSE            reduce using rule 74 (expresion -> expresion RESTA expresion .)
    ELSEIF          reduce using rule 74 (expresion -> expresion RESTA expresion .)
    SEMICOLON       reduce using rule 74 (expresion -> expresion RESTA expresion .)
    SUFIX           reduce using rule 74 (expresion -> expresion RESTA expresion .)
    RPAR            reduce using rule 74 (expresion -> expresion RESTA expresion .)
    COMMA           reduce using rule 74 (expresion -> expresion RESTA expresion .)
    BRACKETC        reduce using rule 74 (expresion -> expresion RESTA expresion .)
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! MUL             [ reduce using rule 74 (expresion -> expresion RESTA expresion .) ]
  ! DIV             [ reduce using rule 74 (expresion -> expresion RESTA expresion .) ]
  ! POT             [ reduce using rule 74 (expresion -> expresion RESTA expresion .) ]
  ! MOD             [ reduce using rule 74 (expresion -> expresion RESTA expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 150

    (75) expresion -> expresion MUL expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 75 (expresion -> expresion MUL expresion .)
    OR              reduce using rule 75 (expresion -> expresion MUL expresion .)
    SUM             reduce using rule 75 (expresion -> expresion MUL expresion .)
    RESTA           reduce using rule 75 (expresion -> expresion MUL expresion .)
    MUL             reduce using rule 75 (expresion -> expresion MUL expresion .)
    DIV             reduce using rule 75 (expresion -> expresion MUL expresion .)
    MOD             reduce using rule 75 (expresion -> expresion MUL expresion .)
    DEQUALS         reduce using rule 75 (expresion -> expresion MUL expresion .)
    DIFF            reduce using rule 75 (expresion -> expresion MUL expresion .)
    GREATER         reduce using rule 75 (expresion -> expresion MUL expresion .)
    LESSTHAN        reduce using rule 75 (expresion -> expresion MUL expresion .)
    GEQ             reduce using rule 75 (expresion -> expresion MUL expresion .)
    LEQ             reduce using rule 75 (expresion -> expresion MUL expresion .)
    BREAK           reduce using rule 75 (expresion -> expresion MUL expresion .)
    CONTINUE        reduce using rule 75 (expresion -> expresion MUL expresion .)
    IDENTIFICADOR   reduce using rule 75 (expresion -> expresion MUL expresion .)
    FUNCTION        reduce using rule 75 (expresion -> expresion MUL expresion .)
    IF              reduce using rule 75 (expresion -> expresion MUL expresion .)
    WHILE           reduce using rule 75 (expresion -> expresion MUL expresion .)
    FOR             reduce using rule 75 (expresion -> expresion MUL expresion .)
    MUTABLE         reduce using rule 75 (expresion -> expresion MUL expresion .)
    STRUCT          reduce using rule 75 (expresion -> expresion MUL expresion .)
    PRINT           reduce using rule 75 (expresion -> expresion MUL expresion .)
    PRINTLN         reduce using rule 75 (expresion -> expresion MUL expresion .)
    PUSH            reduce using rule 75 (expresion -> expresion MUL expresion .)
    POP             reduce using rule 75 (expresion -> expresion MUL expresion .)
    RETURN          reduce using rule 75 (expresion -> expresion MUL expresion .)
    GLOBAL          reduce using rule 75 (expresion -> expresion MUL expresion .)
    LOCAL           reduce using rule 75 (expresion -> expresion MUL expresion .)
    END             reduce using rule 75 (expresion -> expresion MUL expresion .)
    ELSE            reduce using rule 75 (expresion -> expresion MUL expresion .)
    ELSEIF          reduce using rule 75 (expresion -> expresion MUL expresion .)
    SEMICOLON       reduce using rule 75 (expresion -> expresion MUL expresion .)
    SUFIX           reduce using rule 75 (expresion -> expresion MUL expresion .)
    RPAR            reduce using rule 75 (expresion -> expresion MUL expresion .)
    COMMA           reduce using rule 75 (expresion -> expresion MUL expresion .)
    BRACKETC        reduce using rule 75 (expresion -> expresion MUL expresion .)
    POT             shift and go to state 87

  ! POT             [ reduce using rule 75 (expresion -> expresion MUL expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! MUL             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! MOD             [ shift and go to state 88 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 151

    (76) expresion -> expresion DIV expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 76 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 76 (expresion -> expresion DIV expresion .)
    SUM             reduce using rule 76 (expresion -> expresion DIV expresion .)
    RESTA           reduce using rule 76 (expresion -> expresion DIV expresion .)
    MUL             reduce using rule 76 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 76 (expresion -> expresion DIV expresion .)
    MOD             reduce using rule 76 (expresion -> expresion DIV expresion .)
    DEQUALS         reduce using rule 76 (expresion -> expresion DIV expresion .)
    DIFF            reduce using rule 76 (expresion -> expresion DIV expresion .)
    GREATER         reduce using rule 76 (expresion -> expresion DIV expresion .)
    LESSTHAN        reduce using rule 76 (expresion -> expresion DIV expresion .)
    GEQ             reduce using rule 76 (expresion -> expresion DIV expresion .)
    LEQ             reduce using rule 76 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 76 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 76 (expresion -> expresion DIV expresion .)
    IDENTIFICADOR   reduce using rule 76 (expresion -> expresion DIV expresion .)
    FUNCTION        reduce using rule 76 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 76 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 76 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 76 (expresion -> expresion DIV expresion .)
    MUTABLE         reduce using rule 76 (expresion -> expresion DIV expresion .)
    STRUCT          reduce using rule 76 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 76 (expresion -> expresion DIV expresion .)
    PRINTLN         reduce using rule 76 (expresion -> expresion DIV expresion .)
    PUSH            reduce using rule 76 (expresion -> expresion DIV expresion .)
    POP             reduce using rule 76 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 76 (expresion -> expresion DIV expresion .)
    GLOBAL          reduce using rule 76 (expresion -> expresion DIV expresion .)
    LOCAL           reduce using rule 76 (expresion -> expresion DIV expresion .)
    END             reduce using rule 76 (expresion -> expresion DIV expresion .)
    ELSE            reduce using rule 76 (expresion -> expresion DIV expresion .)
    ELSEIF          reduce using rule 76 (expresion -> expresion DIV expresion .)
    SEMICOLON       reduce using rule 76 (expresion -> expresion DIV expresion .)
    SUFIX           reduce using rule 76 (expresion -> expresion DIV expresion .)
    RPAR            reduce using rule 76 (expresion -> expresion DIV expresion .)
    COMMA           reduce using rule 76 (expresion -> expresion DIV expresion .)
    BRACKETC        reduce using rule 76 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 87

  ! POT             [ reduce using rule 76 (expresion -> expresion DIV expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! MUL             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! MOD             [ shift and go to state 88 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 152

    (77) expresion -> expresion POT expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 77 (expresion -> expresion POT expresion .)
    OR              reduce using rule 77 (expresion -> expresion POT expresion .)
    SUM             reduce using rule 77 (expresion -> expresion POT expresion .)
    RESTA           reduce using rule 77 (expresion -> expresion POT expresion .)
    MUL             reduce using rule 77 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 77 (expresion -> expresion POT expresion .)
    MOD             reduce using rule 77 (expresion -> expresion POT expresion .)
    DEQUALS         reduce using rule 77 (expresion -> expresion POT expresion .)
    DIFF            reduce using rule 77 (expresion -> expresion POT expresion .)
    GREATER         reduce using rule 77 (expresion -> expresion POT expresion .)
    LESSTHAN        reduce using rule 77 (expresion -> expresion POT expresion .)
    GEQ             reduce using rule 77 (expresion -> expresion POT expresion .)
    LEQ             reduce using rule 77 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 77 (expresion -> expresion POT expresion .)
    CONTINUE        reduce using rule 77 (expresion -> expresion POT expresion .)
    IDENTIFICADOR   reduce using rule 77 (expresion -> expresion POT expresion .)
    FUNCTION        reduce using rule 77 (expresion -> expresion POT expresion .)
    IF              reduce using rule 77 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 77 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 77 (expresion -> expresion POT expresion .)
    MUTABLE         reduce using rule 77 (expresion -> expresion POT expresion .)
    STRUCT          reduce using rule 77 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 77 (expresion -> expresion POT expresion .)
    PRINTLN         reduce using rule 77 (expresion -> expresion POT expresion .)
    PUSH            reduce using rule 77 (expresion -> expresion POT expresion .)
    POP             reduce using rule 77 (expresion -> expresion POT expresion .)
    RETURN          reduce using rule 77 (expresion -> expresion POT expresion .)
    GLOBAL          reduce using rule 77 (expresion -> expresion POT expresion .)
    LOCAL           reduce using rule 77 (expresion -> expresion POT expresion .)
    END             reduce using rule 77 (expresion -> expresion POT expresion .)
    ELSE            reduce using rule 77 (expresion -> expresion POT expresion .)
    ELSEIF          reduce using rule 77 (expresion -> expresion POT expresion .)
    SEMICOLON       reduce using rule 77 (expresion -> expresion POT expresion .)
    SUFIX           reduce using rule 77 (expresion -> expresion POT expresion .)
    RPAR            reduce using rule 77 (expresion -> expresion POT expresion .)
    COMMA           reduce using rule 77 (expresion -> expresion POT expresion .)
    BRACKETC        reduce using rule 77 (expresion -> expresion POT expresion .)
    POT             shift and go to state 87

  ! POT             [ reduce using rule 77 (expresion -> expresion POT expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! MUL             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! MOD             [ shift and go to state 88 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 153

    (78) expresion -> expresion MOD expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    AND             reduce using rule 78 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 78 (expresion -> expresion MOD expresion .)
    SUM             reduce using rule 78 (expresion -> expresion MOD expresion .)
    RESTA           reduce using rule 78 (expresion -> expresion MOD expresion .)
    MUL             reduce using rule 78 (expresion -> expresion MOD expresion .)
    DIV             reduce using rule 78 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 78 (expresion -> expresion MOD expresion .)
    DEQUALS         reduce using rule 78 (expresion -> expresion MOD expresion .)
    DIFF            reduce using rule 78 (expresion -> expresion MOD expresion .)
    GREATER         reduce using rule 78 (expresion -> expresion MOD expresion .)
    LESSTHAN        reduce using rule 78 (expresion -> expresion MOD expresion .)
    GEQ             reduce using rule 78 (expresion -> expresion MOD expresion .)
    LEQ             reduce using rule 78 (expresion -> expresion MOD expresion .)
    BREAK           reduce using rule 78 (expresion -> expresion MOD expresion .)
    CONTINUE        reduce using rule 78 (expresion -> expresion MOD expresion .)
    IDENTIFICADOR   reduce using rule 78 (expresion -> expresion MOD expresion .)
    FUNCTION        reduce using rule 78 (expresion -> expresion MOD expresion .)
    IF              reduce using rule 78 (expresion -> expresion MOD expresion .)
    WHILE           reduce using rule 78 (expresion -> expresion MOD expresion .)
    FOR             reduce using rule 78 (expresion -> expresion MOD expresion .)
    MUTABLE         reduce using rule 78 (expresion -> expresion MOD expresion .)
    STRUCT          reduce using rule 78 (expresion -> expresion MOD expresion .)
    PRINT           reduce using rule 78 (expresion -> expresion MOD expresion .)
    PRINTLN         reduce using rule 78 (expresion -> expresion MOD expresion .)
    PUSH            reduce using rule 78 (expresion -> expresion MOD expresion .)
    POP             reduce using rule 78 (expresion -> expresion MOD expresion .)
    RETURN          reduce using rule 78 (expresion -> expresion MOD expresion .)
    GLOBAL          reduce using rule 78 (expresion -> expresion MOD expresion .)
    LOCAL           reduce using rule 78 (expresion -> expresion MOD expresion .)
    END             reduce using rule 78 (expresion -> expresion MOD expresion .)
    ELSE            reduce using rule 78 (expresion -> expresion MOD expresion .)
    ELSEIF          reduce using rule 78 (expresion -> expresion MOD expresion .)
    SEMICOLON       reduce using rule 78 (expresion -> expresion MOD expresion .)
    SUFIX           reduce using rule 78 (expresion -> expresion MOD expresion .)
    RPAR            reduce using rule 78 (expresion -> expresion MOD expresion .)
    COMMA           reduce using rule 78 (expresion -> expresion MOD expresion .)
    BRACKETC        reduce using rule 78 (expresion -> expresion MOD expresion .)
    POT             shift and go to state 87

  ! POT             [ reduce using rule 78 (expresion -> expresion MOD expresion .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! SUM             [ shift and go to state 83 ]
  ! RESTA           [ shift and go to state 84 ]
  ! MUL             [ shift and go to state 85 ]
  ! DIV             [ shift and go to state 86 ]
  ! MOD             [ shift and go to state 88 ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 154

    (79) expresion -> expresion DEQUALS expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    DEQUALS         reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    DIFF            reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    BREAK           reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    CONTINUE        reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    IDENTIFICADOR   reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    FUNCTION        reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    IF              reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    WHILE           reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    FOR             reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    MUTABLE         reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    STRUCT          reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    PRINT           reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    PRINTLN         reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    PUSH            reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    POP             reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    RETURN          reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    GLOBAL          reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    LOCAL           reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    END             reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    ELSE            reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    ELSEIF          reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    SEMICOLON       reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    SUFIX           reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    RPAR            reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    COMMA           reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    BRACKETC        reduce using rule 79 (expresion -> expresion DEQUALS expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94

  ! AND             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! OR              [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! SUM             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! RESTA           [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! MUL             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! DIV             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! POT             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! MOD             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! GREATER         [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! LESSTHAN        [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! GEQ             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! LEQ             [ reduce using rule 79 (expresion -> expresion DEQUALS expresion .) ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]


state 155

    (80) expresion -> expresion DIFF expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    DEQUALS         reduce using rule 80 (expresion -> expresion DIFF expresion .)
    DIFF            reduce using rule 80 (expresion -> expresion DIFF expresion .)
    BREAK           reduce using rule 80 (expresion -> expresion DIFF expresion .)
    CONTINUE        reduce using rule 80 (expresion -> expresion DIFF expresion .)
    IDENTIFICADOR   reduce using rule 80 (expresion -> expresion DIFF expresion .)
    FUNCTION        reduce using rule 80 (expresion -> expresion DIFF expresion .)
    IF              reduce using rule 80 (expresion -> expresion DIFF expresion .)
    WHILE           reduce using rule 80 (expresion -> expresion DIFF expresion .)
    FOR             reduce using rule 80 (expresion -> expresion DIFF expresion .)
    MUTABLE         reduce using rule 80 (expresion -> expresion DIFF expresion .)
    STRUCT          reduce using rule 80 (expresion -> expresion DIFF expresion .)
    PRINT           reduce using rule 80 (expresion -> expresion DIFF expresion .)
    PRINTLN         reduce using rule 80 (expresion -> expresion DIFF expresion .)
    PUSH            reduce using rule 80 (expresion -> expresion DIFF expresion .)
    POP             reduce using rule 80 (expresion -> expresion DIFF expresion .)
    RETURN          reduce using rule 80 (expresion -> expresion DIFF expresion .)
    GLOBAL          reduce using rule 80 (expresion -> expresion DIFF expresion .)
    LOCAL           reduce using rule 80 (expresion -> expresion DIFF expresion .)
    END             reduce using rule 80 (expresion -> expresion DIFF expresion .)
    ELSE            reduce using rule 80 (expresion -> expresion DIFF expresion .)
    ELSEIF          reduce using rule 80 (expresion -> expresion DIFF expresion .)
    SEMICOLON       reduce using rule 80 (expresion -> expresion DIFF expresion .)
    SUFIX           reduce using rule 80 (expresion -> expresion DIFF expresion .)
    RPAR            reduce using rule 80 (expresion -> expresion DIFF expresion .)
    COMMA           reduce using rule 80 (expresion -> expresion DIFF expresion .)
    BRACKETC        reduce using rule 80 (expresion -> expresion DIFF expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94

  ! AND             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! OR              [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! SUM             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! RESTA           [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! MUL             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! DIV             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! POT             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! MOD             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! GREATER         [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! LESSTHAN        [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! GEQ             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! LEQ             [ reduce using rule 80 (expresion -> expresion DIFF expresion .) ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]


state 156

    (81) expresion -> expresion GREATER expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    DEQUALS         reduce using rule 81 (expresion -> expresion GREATER expresion .)
    DIFF            reduce using rule 81 (expresion -> expresion GREATER expresion .)
    GREATER         reduce using rule 81 (expresion -> expresion GREATER expresion .)
    LESSTHAN        reduce using rule 81 (expresion -> expresion GREATER expresion .)
    GEQ             reduce using rule 81 (expresion -> expresion GREATER expresion .)
    LEQ             reduce using rule 81 (expresion -> expresion GREATER expresion .)
    BREAK           reduce using rule 81 (expresion -> expresion GREATER expresion .)
    CONTINUE        reduce using rule 81 (expresion -> expresion GREATER expresion .)
    IDENTIFICADOR   reduce using rule 81 (expresion -> expresion GREATER expresion .)
    FUNCTION        reduce using rule 81 (expresion -> expresion GREATER expresion .)
    IF              reduce using rule 81 (expresion -> expresion GREATER expresion .)
    WHILE           reduce using rule 81 (expresion -> expresion GREATER expresion .)
    FOR             reduce using rule 81 (expresion -> expresion GREATER expresion .)
    MUTABLE         reduce using rule 81 (expresion -> expresion GREATER expresion .)
    STRUCT          reduce using rule 81 (expresion -> expresion GREATER expresion .)
    PRINT           reduce using rule 81 (expresion -> expresion GREATER expresion .)
    PRINTLN         reduce using rule 81 (expresion -> expresion GREATER expresion .)
    PUSH            reduce using rule 81 (expresion -> expresion GREATER expresion .)
    POP             reduce using rule 81 (expresion -> expresion GREATER expresion .)
    RETURN          reduce using rule 81 (expresion -> expresion GREATER expresion .)
    GLOBAL          reduce using rule 81 (expresion -> expresion GREATER expresion .)
    LOCAL           reduce using rule 81 (expresion -> expresion GREATER expresion .)
    END             reduce using rule 81 (expresion -> expresion GREATER expresion .)
    ELSE            reduce using rule 81 (expresion -> expresion GREATER expresion .)
    ELSEIF          reduce using rule 81 (expresion -> expresion GREATER expresion .)
    SEMICOLON       reduce using rule 81 (expresion -> expresion GREATER expresion .)
    SUFIX           reduce using rule 81 (expresion -> expresion GREATER expresion .)
    RPAR            reduce using rule 81 (expresion -> expresion GREATER expresion .)
    COMMA           reduce using rule 81 (expresion -> expresion GREATER expresion .)
    BRACKETC        reduce using rule 81 (expresion -> expresion GREATER expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! AND             [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! OR              [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! SUM             [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! RESTA           [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! MUL             [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! DIV             [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! POT             [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! MOD             [ reduce using rule 81 (expresion -> expresion GREATER expresion .) ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 157

    (82) expresion -> expresion LESSTHAN expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    DEQUALS         reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    DIFF            reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    GREATER         reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    LESSTHAN        reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    GEQ             reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    LEQ             reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    BREAK           reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    CONTINUE        reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    IDENTIFICADOR   reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    FUNCTION        reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    IF              reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    WHILE           reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    FOR             reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    MUTABLE         reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    STRUCT          reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    PRINT           reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    PRINTLN         reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    PUSH            reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    POP             reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    RETURN          reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    GLOBAL          reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    LOCAL           reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    END             reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    ELSE            reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    ELSEIF          reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    SEMICOLON       reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    SUFIX           reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    RPAR            reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    COMMA           reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    BRACKETC        reduce using rule 82 (expresion -> expresion LESSTHAN expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! AND             [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! OR              [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! SUM             [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! RESTA           [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! MUL             [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! DIV             [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! POT             [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! MOD             [ reduce using rule 82 (expresion -> expresion LESSTHAN expresion .) ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 158

    (83) expresion -> expresion GEQ expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    DEQUALS         reduce using rule 83 (expresion -> expresion GEQ expresion .)
    DIFF            reduce using rule 83 (expresion -> expresion GEQ expresion .)
    GREATER         reduce using rule 83 (expresion -> expresion GEQ expresion .)
    LESSTHAN        reduce using rule 83 (expresion -> expresion GEQ expresion .)
    GEQ             reduce using rule 83 (expresion -> expresion GEQ expresion .)
    LEQ             reduce using rule 83 (expresion -> expresion GEQ expresion .)
    BREAK           reduce using rule 83 (expresion -> expresion GEQ expresion .)
    CONTINUE        reduce using rule 83 (expresion -> expresion GEQ expresion .)
    IDENTIFICADOR   reduce using rule 83 (expresion -> expresion GEQ expresion .)
    FUNCTION        reduce using rule 83 (expresion -> expresion GEQ expresion .)
    IF              reduce using rule 83 (expresion -> expresion GEQ expresion .)
    WHILE           reduce using rule 83 (expresion -> expresion GEQ expresion .)
    FOR             reduce using rule 83 (expresion -> expresion GEQ expresion .)
    MUTABLE         reduce using rule 83 (expresion -> expresion GEQ expresion .)
    STRUCT          reduce using rule 83 (expresion -> expresion GEQ expresion .)
    PRINT           reduce using rule 83 (expresion -> expresion GEQ expresion .)
    PRINTLN         reduce using rule 83 (expresion -> expresion GEQ expresion .)
    PUSH            reduce using rule 83 (expresion -> expresion GEQ expresion .)
    POP             reduce using rule 83 (expresion -> expresion GEQ expresion .)
    RETURN          reduce using rule 83 (expresion -> expresion GEQ expresion .)
    GLOBAL          reduce using rule 83 (expresion -> expresion GEQ expresion .)
    LOCAL           reduce using rule 83 (expresion -> expresion GEQ expresion .)
    END             reduce using rule 83 (expresion -> expresion GEQ expresion .)
    ELSE            reduce using rule 83 (expresion -> expresion GEQ expresion .)
    ELSEIF          reduce using rule 83 (expresion -> expresion GEQ expresion .)
    SEMICOLON       reduce using rule 83 (expresion -> expresion GEQ expresion .)
    SUFIX           reduce using rule 83 (expresion -> expresion GEQ expresion .)
    RPAR            reduce using rule 83 (expresion -> expresion GEQ expresion .)
    COMMA           reduce using rule 83 (expresion -> expresion GEQ expresion .)
    BRACKETC        reduce using rule 83 (expresion -> expresion GEQ expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! AND             [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! OR              [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! SUM             [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! RESTA           [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! MUL             [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! DIV             [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! POT             [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! MOD             [ reduce using rule 83 (expresion -> expresion GEQ expresion .) ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 159

    (84) expresion -> expresion LEQ expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    DEQUALS         reduce using rule 84 (expresion -> expresion LEQ expresion .)
    DIFF            reduce using rule 84 (expresion -> expresion LEQ expresion .)
    GREATER         reduce using rule 84 (expresion -> expresion LEQ expresion .)
    LESSTHAN        reduce using rule 84 (expresion -> expresion LEQ expresion .)
    GEQ             reduce using rule 84 (expresion -> expresion LEQ expresion .)
    LEQ             reduce using rule 84 (expresion -> expresion LEQ expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion LEQ expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion LEQ expresion .)
    IDENTIFICADOR   reduce using rule 84 (expresion -> expresion LEQ expresion .)
    FUNCTION        reduce using rule 84 (expresion -> expresion LEQ expresion .)
    IF              reduce using rule 84 (expresion -> expresion LEQ expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion LEQ expresion .)
    FOR             reduce using rule 84 (expresion -> expresion LEQ expresion .)
    MUTABLE         reduce using rule 84 (expresion -> expresion LEQ expresion .)
    STRUCT          reduce using rule 84 (expresion -> expresion LEQ expresion .)
    PRINT           reduce using rule 84 (expresion -> expresion LEQ expresion .)
    PRINTLN         reduce using rule 84 (expresion -> expresion LEQ expresion .)
    PUSH            reduce using rule 84 (expresion -> expresion LEQ expresion .)
    POP             reduce using rule 84 (expresion -> expresion LEQ expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion LEQ expresion .)
    GLOBAL          reduce using rule 84 (expresion -> expresion LEQ expresion .)
    LOCAL           reduce using rule 84 (expresion -> expresion LEQ expresion .)
    END             reduce using rule 84 (expresion -> expresion LEQ expresion .)
    ELSE            reduce using rule 84 (expresion -> expresion LEQ expresion .)
    ELSEIF          reduce using rule 84 (expresion -> expresion LEQ expresion .)
    SEMICOLON       reduce using rule 84 (expresion -> expresion LEQ expresion .)
    SUFIX           reduce using rule 84 (expresion -> expresion LEQ expresion .)
    RPAR            reduce using rule 84 (expresion -> expresion LEQ expresion .)
    COMMA           reduce using rule 84 (expresion -> expresion LEQ expresion .)
    BRACKETC        reduce using rule 84 (expresion -> expresion LEQ expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88

  ! AND             [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! OR              [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! SUM             [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! RESTA           [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! MUL             [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! DIV             [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! POT             [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! MOD             [ reduce using rule 84 (expresion -> expresion LEQ expresion .) ]
  ! DEQUALS         [ shift and go to state 89 ]
  ! DIFF            [ shift and go to state 90 ]
  ! GREATER         [ shift and go to state 91 ]
  ! LESSTHAN        [ shift and go to state 92 ]
  ! GEQ             [ shift and go to state 93 ]
  ! LEQ             [ shift and go to state 94 ]


state 160

    (17) lista_instrucciones -> lista_instrucciones instruccion .

    BREAK           reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    CONTINUE        reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    IDENTIFICADOR   reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    FUNCTION        reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    IF              reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    WHILE           reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    FOR             reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    MUTABLE         reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    STRUCT          reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    PRINT           reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    PRINTLN         reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    PUSH            reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    POP             reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    RETURN          reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    GLOBAL          reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    LOCAL           reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    END             reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    ELSE            reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)
    ELSEIF          reduce using rule 17 (lista_instrucciones -> lista_instrucciones instruccion .)


state 161

    (18) lista_instrucciones -> lista_instrucciones transferencia .

    BREAK           reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    CONTINUE        reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    IDENTIFICADOR   reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    FUNCTION        reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    IF              reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    WHILE           reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    FOR             reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    MUTABLE         reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    STRUCT          reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    PRINT           reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    PRINTLN         reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    PUSH            reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    POP             reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    RETURN          reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    GLOBAL          reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    LOCAL           reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    END             reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    ELSE            reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)
    ELSEIF          reduce using rule 18 (lista_instrucciones -> lista_instrucciones transferencia .)


state 162

    (21) transferencia -> BREAK SEMICOLON .

    BREAK           reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    IDENTIFICADOR   reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    FUNCTION        reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    IF              reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    WHILE           reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    FOR             reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    MUTABLE         reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    STRUCT          reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    PRINT           reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    PRINTLN         reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    PUSH            reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    POP             reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    RETURN          reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    GLOBAL          reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    LOCAL           reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    END             reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    ELSE            reduce using rule 21 (transferencia -> BREAK SEMICOLON .)
    ELSEIF          reduce using rule 21 (transferencia -> BREAK SEMICOLON .)


state 163

    (22) transferencia -> CONTINUE SEMICOLON .

    BREAK           reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    IDENTIFICADOR   reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    FUNCTION        reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    IF              reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    MUTABLE         reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    STRUCT          reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    PRINTLN         reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    PUSH            reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    POP             reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    GLOBAL          reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    LOCAL           reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    END             reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)
    ELSEIF          reduce using rule 22 (transferencia -> CONTINUE SEMICOLON .)


state 164

    (23) transferencia -> returnValue SEMICOLON .

    BREAK           reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    CONTINUE        reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    IDENTIFICADOR   reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    FUNCTION        reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    IF              reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    WHILE           reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    FOR             reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    MUTABLE         reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    STRUCT          reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    PRINT           reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    PRINTLN         reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    PUSH            reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    POP             reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    RETURN          reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    GLOBAL          reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    LOCAL           reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    END             reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    ELSE            reduce using rule 23 (transferencia -> returnValue SEMICOLON .)
    ELSEIF          reduce using rule 23 (transferencia -> returnValue SEMICOLON .)


state 165

    (24) returnValue -> RETURN expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    SEMICOLON       reduce using rule 24 (returnValue -> RETURN expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 166

    (86) expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .

    AND             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    OR              reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    SUM             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    RESTA           reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    MUL             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    DIV             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    POT             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    MOD             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    DEQUALS         reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    DIFF            reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    GREATER         reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    LESSTHAN        reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    GEQ             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    LEQ             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    BREAK           reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    CONTINUE        reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    FUNCTION        reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    IF              reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    WHILE           reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    FOR             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    MUTABLE         reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    STRUCT          reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    PRINT           reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    PRINTLN         reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    PUSH            reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    POP             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    RETURN          reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    GLOBAL          reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    LOCAL           reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    END             reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    ELSE            reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    ELSEIF          reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    SEMICOLON       reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    SUFIX           reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    RPAR            reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    COMMA           reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)
    BRACKETC        reduce using rule 86 (expresion -> IDENTIFICADOR PUNTO IDENTIFICADOR .)


state 167

    (93) dimensiones -> dimensiones BRACKETA . expresion BRACKETC
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 219
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 168

    (94) dimensiones -> BRACKETA expresion . BRACKETC
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    BRACKETC        shift and go to state 220
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 169

    (87) expresion -> LPAR expresion RPAR .

    AND             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    OR              reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    SUM             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    RESTA           reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    MUL             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    DIV             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    POT             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    MOD             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    DEQUALS         reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    DIFF            reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    GREATER         reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    GEQ             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    LEQ             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    BREAK           reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    CONTINUE        reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    FUNCTION        reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    IF              reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    WHILE           reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    FOR             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    MUTABLE         reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    STRUCT          reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    PRINT           reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    PRINTLN         reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    PUSH            reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    POP             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    RETURN          reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    GLOBAL          reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    LOCAL           reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    END             reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    ELSE            reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    ELSEIF          reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    SUFIX           reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    RPAR            reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    COMMA           reduce using rule 87 (expresion -> LPAR expresion RPAR .)
    BRACKETC        reduce using rule 87 (expresion -> LPAR expresion RPAR .)


state 170

    (103) primitivas -> BRACKETA items BRACKETC .

    AND             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    OR              reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    SUM             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    RESTA           reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    MUL             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    DIV             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    POT             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    MOD             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    DEQUALS         reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    DIFF            reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    GREATER         reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    LESSTHAN        reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    GEQ             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    LEQ             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    BREAK           reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    CONTINUE        reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    IDENTIFICADOR   reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    FUNCTION        reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    IF              reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    WHILE           reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    FOR             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    MUTABLE         reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    STRUCT          reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    PRINT           reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    PRINTLN         reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    PUSH            reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    POP             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    RETURN          reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    GLOBAL          reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    LOCAL           reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    END             reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    ELSE            reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    ELSEIF          reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    SEMICOLON       reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    SUFIX           reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    RPAR            reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    COMMA           reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)
    BRACKETC        reduce using rule 103 (primitivas -> BRACKETA items BRACKETC .)


state 171

    (117) items -> items COMMA . expresion
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 221
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 172

    (104) nativas -> SENO LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 222
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 173

    (105) nativas -> COSENO LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 223
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 174

    (106) nativas -> LOG LPAR expresion . COMMA expresion RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    COMMA           shift and go to state 224
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 175

    (107) nativas -> LOG10 LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 225
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 176

    (108) nativas -> RAIZ LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 226
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 177

    (109) nativas -> TANGENTE LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 227
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 178

    (110) nativas -> LOWERCASE LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 228
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 179

    (111) nativas -> UPPERCASE LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 229
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 180

    (112) nativas -> PARSE LPAR tipo_dato . COMMA expresion RPAR

    COMMA           shift and go to state 230


state 181

    (36) tipo_dato -> INT64 .

    COMMA           reduce using rule 36 (tipo_dato -> INT64 .)
    SEMICOLON       reduce using rule 36 (tipo_dato -> INT64 .)
    RPAR            reduce using rule 36 (tipo_dato -> INT64 .)


state 182

    (37) tipo_dato -> FLOAT64 .

    COMMA           reduce using rule 37 (tipo_dato -> FLOAT64 .)
    SEMICOLON       reduce using rule 37 (tipo_dato -> FLOAT64 .)
    RPAR            reduce using rule 37 (tipo_dato -> FLOAT64 .)


state 183

    (38) tipo_dato -> BOOL .

    COMMA           reduce using rule 38 (tipo_dato -> BOOL .)
    SEMICOLON       reduce using rule 38 (tipo_dato -> BOOL .)
    RPAR            reduce using rule 38 (tipo_dato -> BOOL .)


state 184

    (39) tipo_dato -> CHAR .

    COMMA           reduce using rule 39 (tipo_dato -> CHAR .)
    SEMICOLON       reduce using rule 39 (tipo_dato -> CHAR .)
    RPAR            reduce using rule 39 (tipo_dato -> CHAR .)


state 185

    (40) tipo_dato -> STRING .

    COMMA           reduce using rule 40 (tipo_dato -> STRING .)
    SEMICOLON       reduce using rule 40 (tipo_dato -> STRING .)
    RPAR            reduce using rule 40 (tipo_dato -> STRING .)


state 186

    (41) tipo_dato -> ARRAY .

    COMMA           reduce using rule 41 (tipo_dato -> ARRAY .)
    SEMICOLON       reduce using rule 41 (tipo_dato -> ARRAY .)
    RPAR            reduce using rule 41 (tipo_dato -> ARRAY .)


state 187

    (42) tipo_dato -> NOTHING .

    COMMA           reduce using rule 42 (tipo_dato -> NOTHING .)
    SEMICOLON       reduce using rule 42 (tipo_dato -> NOTHING .)
    RPAR            reduce using rule 42 (tipo_dato -> NOTHING .)


state 188

    (43) tipo_dato -> IDENTIFICADOR .

    COMMA           reduce using rule 43 (tipo_dato -> IDENTIFICADOR .)
    SEMICOLON       reduce using rule 43 (tipo_dato -> IDENTIFICADOR .)
    RPAR            reduce using rule 43 (tipo_dato -> IDENTIFICADOR .)


state 189

    (113) nativas -> TRUNC LPAR tipo_dato . COMMA expresion RPAR

    COMMA           shift and go to state 231


state 190

    (114) nativas -> FLOATCAST LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 232
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 191

    (115) nativas -> STRINGCAST LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 233
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 192

    (116) nativas -> TYPEOF LPAR expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 234
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 193

    (55) whileST -> WHILE expresion sentencias END . SEMICOLON

    SEMICOLON       shift and go to state 235


state 194

    (56) forST -> FOR IDENTIFICADOR IN expresion . sentencias END SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion
    (47) sentencias -> . lista_instrucciones
    (48) sentencias -> .
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94
    END             reduce using rule 48 (sentencias -> .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    sentencias                     shift and go to state 236
    lista_instrucciones            shift and go to state 95
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 195

    (59) struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos . END SEMICOLON
    (61) lista_atributos -> lista_atributos . IDENTIFICADOR SUFIX tipo_dato SEMICOLON
    (62) lista_atributos -> lista_atributos . IDENTIFICADOR SEMICOLON

    END             shift and go to state 237
    IDENTIFICADOR   shift and go to state 198


state 196

    (63) lista_atributos -> IDENTIFICADOR SUFIX . tipo_dato SEMICOLON
    (36) tipo_dato -> . INT64
    (37) tipo_dato -> . FLOAT64
    (38) tipo_dato -> . BOOL
    (39) tipo_dato -> . CHAR
    (40) tipo_dato -> . STRING
    (41) tipo_dato -> . ARRAY
    (42) tipo_dato -> . NOTHING
    (43) tipo_dato -> . IDENTIFICADOR

    INT64           shift and go to state 181
    FLOAT64         shift and go to state 182
    BOOL            shift and go to state 183
    CHAR            shift and go to state 184
    STRING          shift and go to state 185
    ARRAY           shift and go to state 186
    NOTHING         shift and go to state 187
    IDENTIFICADOR   shift and go to state 188

    tipo_dato                      shift and go to state 238

state 197

    (64) lista_atributos -> IDENTIFICADOR SEMICOLON .

    END             reduce using rule 64 (lista_atributos -> IDENTIFICADOR SEMICOLON .)
    IDENTIFICADOR   reduce using rule 64 (lista_atributos -> IDENTIFICADOR SEMICOLON .)


state 198

    (61) lista_atributos -> lista_atributos IDENTIFICADOR . SUFIX tipo_dato SEMICOLON
    (62) lista_atributos -> lista_atributos IDENTIFICADOR . SEMICOLON

    SUFIX           shift and go to state 239
    SEMICOLON       shift and go to state 240


state 199

    (60) struct -> STRUCT IDENTIFICADOR lista_atributos END . SEMICOLON

    SEMICOLON       shift and go to state 241


state 200

    (65) inst_nativa -> PRINT LPAR lista_expresion RPAR . SEMICOLON

    SEMICOLON       shift and go to state 242


state 201

    (66) inst_nativa -> PRINTLN LPAR lista_expresion RPAR . SEMICOLON

    SEMICOLON       shift and go to state 243


state 202

    (67) inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA . expresion RPAR SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 244
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 203

    (68) inst_nativa -> POP LPAR IDENTIFICADOR COMMA . expresion RPAR SEMICOLON
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 245
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 204

    (32) asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato . SEMICOLON

    SEMICOLON       shift and go to state 246


state 205

    (33) asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion . SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    SEMICOLON       shift and go to state 247
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 206

    (57) lista_expresion -> lista_expresion COMMA expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            reduce using rule 57 (lista_expresion -> lista_expresion COMMA expresion .)
    COMMA           reduce using rule 57 (lista_expresion -> lista_expresion COMMA expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 207

    (31) asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .

    IDENTIFICADOR   reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    FUNCTION        reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    IF              reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    MUTABLE         reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    STRUCT          reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PRINTLN         reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PUSH            reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    POP             reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    GLOBAL          reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    LOCAL           reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    $end            reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    BREAK           reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    CONTINUE        reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    END             reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)
    ELSEIF          reduce using rule 31 (asignacion -> tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON .)


state 208

    (28) lista_parametros -> IDENTIFICADOR SUFIX . tipo_dato
    (36) tipo_dato -> . INT64
    (37) tipo_dato -> . FLOAT64
    (38) tipo_dato -> . BOOL
    (39) tipo_dato -> . CHAR
    (40) tipo_dato -> . STRING
    (41) tipo_dato -> . ARRAY
    (42) tipo_dato -> . NOTHING
    (43) tipo_dato -> . IDENTIFICADOR

    INT64           shift and go to state 181
    FLOAT64         shift and go to state 182
    BOOL            shift and go to state 183
    CHAR            shift and go to state 184
    STRING          shift and go to state 185
    ARRAY           shift and go to state 186
    NOTHING         shift and go to state 187
    IDENTIFICADOR   shift and go to state 188

    tipo_dato                      shift and go to state 248

state 209

    (13) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR . lista_instrucciones END SEMICOLON
    (16) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR . END SEMICOLON
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    END             shift and go to state 250
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    lista_instrucciones            shift and go to state 249
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 210

    (26) lista_parametros -> lista_parametros COMMA . IDENTIFICADOR
    (27) lista_parametros -> lista_parametros COMMA . IDENTIFICADOR SUFIX tipo_dato

    IDENTIFICADOR   shift and go to state 251


state 211

    (14) declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END . SEMICOLON

    SEMICOLON       shift and go to state 252


state 212

    (15) declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones . END SEMICOLON
    (17) lista_instrucciones -> lista_instrucciones . instruccion
    (18) lista_instrucciones -> lista_instrucciones . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    END             shift and go to state 253
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    instruccion                    shift and go to state 160
    transferencia                  shift and go to state 161
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 213

    (49) condicional -> IF expresion sentencias END SEMICOLON .

    IDENTIFICADOR   reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    FUNCTION        reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    IF              reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    WHILE           reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    FOR             reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    MUTABLE         reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    STRUCT          reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    PRINT           reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    PRINTLN         reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    PUSH            reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    POP             reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    GLOBAL          reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    LOCAL           reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    $end            reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    BREAK           reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    CONTINUE        reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    RETURN          reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    END             reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    ELSE            reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)
    ELSEIF          reduce using rule 49 (condicional -> IF expresion sentencias END SEMICOLON .)


state 214

    (50) condicional -> IF expresion sentencias ELSE sentencias . END SEMICOLON

    END             shift and go to state 254


state 215

    (51) condicional -> IF expresion sentencias elseifList END . SEMICOLON

    SEMICOLON       shift and go to state 255


state 216

    (52) condicional -> IF expresion sentencias elseifList ELSE . sentencias END SEMICOLON
    (47) sentencias -> . lista_instrucciones
    (48) sentencias -> .
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    END             reduce using rule 48 (sentencias -> .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    sentencias                     shift and go to state 256
    lista_instrucciones            shift and go to state 95
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 217

    (53) elseifList -> elseifList ELSEIF . expresion sentencias
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 257
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 218

    (54) elseifList -> ELSEIF expresion . sentencias
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion
    (47) sentencias -> . lista_instrucciones
    (48) sentencias -> .
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94
    END             reduce using rule 48 (sentencias -> .)
    ELSE            reduce using rule 48 (sentencias -> .)
    ELSEIF          reduce using rule 48 (sentencias -> .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    sentencias                     shift and go to state 258
    lista_instrucciones            shift and go to state 95
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 219

    (93) dimensiones -> dimensiones BRACKETA expresion . BRACKETC
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    BRACKETC        shift and go to state 259
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 220

    (94) dimensiones -> BRACKETA expresion BRACKETC .

    BRACKETA        reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    AND             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    OR              reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    SUM             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    RESTA           reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    MUL             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    DIV             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    POT             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    MOD             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    DEQUALS         reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    DIFF            reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    GREATER         reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    LESSTHAN        reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    GEQ             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    LEQ             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    BREAK           reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    CONTINUE        reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    IDENTIFICADOR   reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    FUNCTION        reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    IF              reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    WHILE           reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    FOR             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    MUTABLE         reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    STRUCT          reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    PRINT           reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    PRINTLN         reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    PUSH            reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    POP             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    RETURN          reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    GLOBAL          reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    LOCAL           reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    END             reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    ELSE            reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    ELSEIF          reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    SEMICOLON       reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    SUFIX           reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    RPAR            reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    COMMA           reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)
    BRACKETC        reduce using rule 94 (dimensiones -> BRACKETA expresion BRACKETC .)


state 221

    (117) items -> items COMMA expresion .
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    BRACKETC        reduce using rule 117 (items -> items COMMA expresion .)
    COMMA           reduce using rule 117 (items -> items COMMA expresion .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 222

    (104) nativas -> SENO LPAR expresion RPAR .

    AND             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    OR              reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    SUM             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    RESTA           reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    MUL             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    DIV             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    POT             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    MOD             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    DEQUALS         reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    DIFF            reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    GREATER         reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    GEQ             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    LEQ             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    BREAK           reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    CONTINUE        reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    FUNCTION        reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    IF              reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    WHILE           reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    FOR             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    MUTABLE         reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    STRUCT          reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    PRINT           reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    PRINTLN         reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    PUSH            reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    POP             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    RETURN          reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    GLOBAL          reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    LOCAL           reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    END             reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    ELSE            reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    ELSEIF          reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    SUFIX           reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    RPAR            reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    COMMA           reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)
    BRACKETC        reduce using rule 104 (nativas -> SENO LPAR expresion RPAR .)


state 223

    (105) nativas -> COSENO LPAR expresion RPAR .

    AND             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    OR              reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    SUM             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    RESTA           reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    MUL             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    DIV             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    POT             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    MOD             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    DEQUALS         reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    DIFF            reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    GREATER         reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    GEQ             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    LEQ             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    BREAK           reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    CONTINUE        reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    FUNCTION        reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    IF              reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    WHILE           reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    FOR             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    MUTABLE         reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    STRUCT          reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    PRINT           reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    PRINTLN         reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    PUSH            reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    POP             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    RETURN          reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    GLOBAL          reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    LOCAL           reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    END             reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    ELSE            reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    ELSEIF          reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    SUFIX           reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    RPAR            reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    COMMA           reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)
    BRACKETC        reduce using rule 105 (nativas -> COSENO LPAR expresion RPAR .)


state 224

    (106) nativas -> LOG LPAR expresion COMMA . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 260
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 225

    (107) nativas -> LOG10 LPAR expresion RPAR .

    AND             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    OR              reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    SUM             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    RESTA           reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    MUL             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    DIV             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    POT             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    MOD             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    DEQUALS         reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    DIFF            reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    GREATER         reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    GEQ             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    LEQ             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    BREAK           reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    CONTINUE        reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    FUNCTION        reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    IF              reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    WHILE           reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    FOR             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    MUTABLE         reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    STRUCT          reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    PRINT           reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    PRINTLN         reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    PUSH            reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    POP             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    RETURN          reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    GLOBAL          reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    LOCAL           reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    END             reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    ELSE            reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    ELSEIF          reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    SUFIX           reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    RPAR            reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    COMMA           reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)
    BRACKETC        reduce using rule 107 (nativas -> LOG10 LPAR expresion RPAR .)


state 226

    (108) nativas -> RAIZ LPAR expresion RPAR .

    AND             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    OR              reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    SUM             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    RESTA           reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    MUL             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    DIV             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    POT             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    MOD             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    DEQUALS         reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    DIFF            reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    GREATER         reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    GEQ             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    LEQ             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    BREAK           reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    CONTINUE        reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    FUNCTION        reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    IF              reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    WHILE           reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    FOR             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    MUTABLE         reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    STRUCT          reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    PRINT           reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    PRINTLN         reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    PUSH            reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    POP             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    RETURN          reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    GLOBAL          reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    LOCAL           reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    END             reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    ELSE            reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    ELSEIF          reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    SUFIX           reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    RPAR            reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    COMMA           reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)
    BRACKETC        reduce using rule 108 (nativas -> RAIZ LPAR expresion RPAR .)


state 227

    (109) nativas -> TANGENTE LPAR expresion RPAR .

    AND             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    OR              reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    SUM             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    RESTA           reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    MUL             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    DIV             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    POT             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    MOD             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    DEQUALS         reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    DIFF            reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    GREATER         reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    GEQ             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    LEQ             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    BREAK           reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    CONTINUE        reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    FUNCTION        reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    IF              reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    WHILE           reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    FOR             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    MUTABLE         reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    STRUCT          reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    PRINT           reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    PRINTLN         reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    PUSH            reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    POP             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    RETURN          reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    GLOBAL          reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    LOCAL           reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    END             reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    ELSE            reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    ELSEIF          reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    SUFIX           reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    RPAR            reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    COMMA           reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)
    BRACKETC        reduce using rule 109 (nativas -> TANGENTE LPAR expresion RPAR .)


state 228

    (110) nativas -> LOWERCASE LPAR expresion RPAR .

    AND             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    OR              reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    SUM             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    RESTA           reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    MUL             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    DIV             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    POT             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    MOD             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    DEQUALS         reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    DIFF            reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    GREATER         reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    GEQ             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    LEQ             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    BREAK           reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    CONTINUE        reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    FUNCTION        reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    IF              reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    WHILE           reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    FOR             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    MUTABLE         reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    STRUCT          reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    PRINT           reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    PRINTLN         reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    PUSH            reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    POP             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    RETURN          reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    GLOBAL          reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    LOCAL           reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    END             reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    ELSE            reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    ELSEIF          reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    SUFIX           reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    RPAR            reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    COMMA           reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)
    BRACKETC        reduce using rule 110 (nativas -> LOWERCASE LPAR expresion RPAR .)


state 229

    (111) nativas -> UPPERCASE LPAR expresion RPAR .

    AND             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    OR              reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    SUM             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    RESTA           reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    MUL             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    DIV             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    POT             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    MOD             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    DEQUALS         reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    DIFF            reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    GREATER         reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    GEQ             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    LEQ             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    BREAK           reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    CONTINUE        reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    FUNCTION        reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    IF              reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    WHILE           reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    FOR             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    MUTABLE         reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    STRUCT          reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    PRINT           reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    PRINTLN         reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    PUSH            reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    POP             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    RETURN          reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    GLOBAL          reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    LOCAL           reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    END             reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    ELSE            reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    ELSEIF          reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    SUFIX           reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    RPAR            reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    COMMA           reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)
    BRACKETC        reduce using rule 111 (nativas -> UPPERCASE LPAR expresion RPAR .)


state 230

    (112) nativas -> PARSE LPAR tipo_dato COMMA . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 261
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 231

    (113) nativas -> TRUNC LPAR tipo_dato COMMA . expresion RPAR
    (69) expresion -> . RESTA expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . expresion AND expresion
    (72) expresion -> . expresion OR expresion
    (73) expresion -> . expresion SUM expresion
    (74) expresion -> . expresion RESTA expresion
    (75) expresion -> . expresion MUL expresion
    (76) expresion -> . expresion DIV expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . expresion MOD expresion
    (79) expresion -> . expresion DEQUALS expresion
    (80) expresion -> . expresion DIFF expresion
    (81) expresion -> . expresion GREATER expresion
    (82) expresion -> . expresion LESSTHAN expresion
    (83) expresion -> . expresion GEQ expresion
    (84) expresion -> . expresion LEQ expresion
    (85) expresion -> . IDENTIFICADOR
    (86) expresion -> . IDENTIFICADOR PUNTO IDENTIFICADOR
    (87) expresion -> . LPAR expresion RPAR
    (88) expresion -> . primitivas
    (89) expresion -> . nativas
    (90) expresion -> . callFunc
    (91) expresion -> . callArrays
    (95) primitivas -> . ENTERO
    (96) primitivas -> . DECIMAL
    (97) primitivas -> . FALSE
    (98) primitivas -> . TRUE
    (99) primitivas -> . STRINGLITERAL
    (100) primitivas -> . CHARLITERAL
    (101) primitivas -> . NOTHING
    (102) primitivas -> . BRACKETA BRACKETC
    (103) primitivas -> . BRACKETA items BRACKETC
    (104) nativas -> . SENO LPAR expresion RPAR
    (105) nativas -> . COSENO LPAR expresion RPAR
    (106) nativas -> . LOG LPAR expresion COMMA expresion RPAR
    (107) nativas -> . LOG10 LPAR expresion RPAR
    (108) nativas -> . RAIZ LPAR expresion RPAR
    (109) nativas -> . TANGENTE LPAR expresion RPAR
    (110) nativas -> . LOWERCASE LPAR expresion RPAR
    (111) nativas -> . UPPERCASE LPAR expresion RPAR
    (112) nativas -> . PARSE LPAR tipo_dato COMMA expresion RPAR
    (113) nativas -> . TRUNC LPAR tipo_dato COMMA expresion RPAR
    (114) nativas -> . FLOATCAST LPAR expresion RPAR
    (115) nativas -> . STRINGCAST LPAR expresion RPAR
    (116) nativas -> . TYPEOF LPAR expresion RPAR
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR
    (92) callArrays -> . IDENTIFICADOR dimensiones

    RESTA           shift and go to state 36
    NOT             shift and go to state 37
    IDENTIFICADOR   shift and go to state 38
    LPAR            shift and go to state 39
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    FALSE           shift and go to state 46
    TRUE            shift and go to state 47
    STRINGLITERAL   shift and go to state 48
    CHARLITERAL     shift and go to state 49
    NOTHING         shift and go to state 50
    BRACKETA        shift and go to state 51
    SENO            shift and go to state 52
    COSENO          shift and go to state 53
    LOG             shift and go to state 54
    LOG10           shift and go to state 55
    RAIZ            shift and go to state 56
    TANGENTE        shift and go to state 57
    LOWERCASE       shift and go to state 58
    UPPERCASE       shift and go to state 59
    PARSE           shift and go to state 60
    TRUNC           shift and go to state 61
    FLOATCAST       shift and go to state 62
    STRINGCAST      shift and go to state 63
    TYPEOF          shift and go to state 64

    expresion                      shift and go to state 262
    primitivas                     shift and go to state 40
    nativas                        shift and go to state 41
    callFunc                       shift and go to state 42
    callArrays                     shift and go to state 43

state 232

    (114) nativas -> FLOATCAST LPAR expresion RPAR .

    AND             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    OR              reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    SUM             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    RESTA           reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    MUL             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    DIV             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    POT             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    MOD             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    DEQUALS         reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    DIFF            reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    GREATER         reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    GEQ             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    LEQ             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    BREAK           reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    CONTINUE        reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    FUNCTION        reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    IF              reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    WHILE           reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    FOR             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    MUTABLE         reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    STRUCT          reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    PRINT           reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    PRINTLN         reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    PUSH            reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    POP             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    RETURN          reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    GLOBAL          reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    LOCAL           reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    END             reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    ELSE            reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    ELSEIF          reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    SUFIX           reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    RPAR            reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    COMMA           reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)
    BRACKETC        reduce using rule 114 (nativas -> FLOATCAST LPAR expresion RPAR .)


state 233

    (115) nativas -> STRINGCAST LPAR expresion RPAR .

    AND             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    OR              reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    SUM             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    RESTA           reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    MUL             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    DIV             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    POT             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    MOD             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    DEQUALS         reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    DIFF            reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    GREATER         reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    GEQ             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    LEQ             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    BREAK           reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    CONTINUE        reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    FUNCTION        reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    IF              reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    WHILE           reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    FOR             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    MUTABLE         reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    STRUCT          reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    PRINT           reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    PRINTLN         reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    PUSH            reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    POP             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    RETURN          reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    GLOBAL          reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    LOCAL           reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    END             reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    ELSE            reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    ELSEIF          reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    SUFIX           reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    RPAR            reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    COMMA           reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)
    BRACKETC        reduce using rule 115 (nativas -> STRINGCAST LPAR expresion RPAR .)


state 234

    (116) nativas -> TYPEOF LPAR expresion RPAR .

    AND             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    OR              reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    SUM             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    RESTA           reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    MUL             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    DIV             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    POT             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    MOD             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    DEQUALS         reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    DIFF            reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    GREATER         reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    LESSTHAN        reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    GEQ             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    LEQ             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    BREAK           reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    CONTINUE        reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    IDENTIFICADOR   reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    FUNCTION        reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    IF              reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    WHILE           reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    FOR             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    MUTABLE         reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    STRUCT          reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    PRINT           reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    PRINTLN         reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    PUSH            reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    POP             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    RETURN          reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    GLOBAL          reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    LOCAL           reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    END             reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    ELSE            reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    ELSEIF          reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    SEMICOLON       reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    SUFIX           reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    RPAR            reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    COMMA           reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)
    BRACKETC        reduce using rule 116 (nativas -> TYPEOF LPAR expresion RPAR .)


state 235

    (55) whileST -> WHILE expresion sentencias END SEMICOLON .

    IDENTIFICADOR   reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    FUNCTION        reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    IF              reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    WHILE           reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    FOR             reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    MUTABLE         reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    STRUCT          reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    PRINT           reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    PRINTLN         reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    PUSH            reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    POP             reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    GLOBAL          reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    LOCAL           reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    $end            reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    BREAK           reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    CONTINUE        reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    RETURN          reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    END             reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    ELSE            reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)
    ELSEIF          reduce using rule 55 (whileST -> WHILE expresion sentencias END SEMICOLON .)


state 236

    (56) forST -> FOR IDENTIFICADOR IN expresion sentencias . END SEMICOLON

    END             shift and go to state 263


state 237

    (59) struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END . SEMICOLON

    SEMICOLON       shift and go to state 264


state 238

    (63) lista_atributos -> IDENTIFICADOR SUFIX tipo_dato . SEMICOLON

    SEMICOLON       shift and go to state 265


state 239

    (61) lista_atributos -> lista_atributos IDENTIFICADOR SUFIX . tipo_dato SEMICOLON
    (36) tipo_dato -> . INT64
    (37) tipo_dato -> . FLOAT64
    (38) tipo_dato -> . BOOL
    (39) tipo_dato -> . CHAR
    (40) tipo_dato -> . STRING
    (41) tipo_dato -> . ARRAY
    (42) tipo_dato -> . NOTHING
    (43) tipo_dato -> . IDENTIFICADOR

    INT64           shift and go to state 181
    FLOAT64         shift and go to state 182
    BOOL            shift and go to state 183
    CHAR            shift and go to state 184
    STRING          shift and go to state 185
    ARRAY           shift and go to state 186
    NOTHING         shift and go to state 187
    IDENTIFICADOR   shift and go to state 188

    tipo_dato                      shift and go to state 266

state 240

    (62) lista_atributos -> lista_atributos IDENTIFICADOR SEMICOLON .

    END             reduce using rule 62 (lista_atributos -> lista_atributos IDENTIFICADOR SEMICOLON .)
    IDENTIFICADOR   reduce using rule 62 (lista_atributos -> lista_atributos IDENTIFICADOR SEMICOLON .)


state 241

    (60) struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .

    IDENTIFICADOR   reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    FUNCTION        reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    IF              reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    WHILE           reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    FOR             reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    MUTABLE         reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    STRUCT          reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    PRINT           reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    PRINTLN         reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    PUSH            reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    POP             reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    GLOBAL          reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    LOCAL           reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    $end            reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    BREAK           reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    CONTINUE        reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    RETURN          reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    END             reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    ELSE            reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    ELSEIF          reduce using rule 60 (struct -> STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)


state 242

    (65) inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .

    IDENTIFICADOR   reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    FUNCTION        reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    IF              reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    WHILE           reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    FOR             reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    MUTABLE         reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    STRUCT          reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    PRINT           reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    PRINTLN         reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    PUSH            reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    POP             reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    GLOBAL          reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    LOCAL           reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    $end            reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    BREAK           reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    CONTINUE        reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    RETURN          reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    END             reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    ELSE            reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)
    ELSEIF          reduce using rule 65 (inst_nativa -> PRINT LPAR lista_expresion RPAR SEMICOLON .)


state 243

    (66) inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .

    IDENTIFICADOR   reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    FUNCTION        reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    IF              reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    WHILE           reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    FOR             reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    MUTABLE         reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    STRUCT          reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    PRINT           reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    PRINTLN         reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    PUSH            reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    POP             reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    GLOBAL          reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    LOCAL           reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    $end            reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    BREAK           reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    CONTINUE        reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    RETURN          reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    END             reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    ELSE            reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)
    ELSEIF          reduce using rule 66 (inst_nativa -> PRINTLN LPAR lista_expresion RPAR SEMICOLON .)


state 244

    (67) inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion . RPAR SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 267
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 245

    (68) inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion . RPAR SEMICOLON
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 268
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 246

    (32) asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .

    IDENTIFICADOR   reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    FUNCTION        reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    IF              reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    WHILE           reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    FOR             reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    MUTABLE         reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    STRUCT          reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    PRINT           reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    PRINTLN         reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    PUSH            reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    POP             reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    GLOBAL          reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    LOCAL           reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    $end            reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    BREAK           reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    CONTINUE        reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    RETURN          reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    END             reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    ELSE            reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)
    ELSEIF          reduce using rule 32 (asignacion -> IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON .)


state 247

    (33) asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .

    IDENTIFICADOR   reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    FUNCTION        reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    IF              reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    MUTABLE         reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    STRUCT          reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PRINTLN         reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    PUSH            reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    POP             reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    GLOBAL          reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    LOCAL           reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    $end            reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    BREAK           reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    CONTINUE        reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    END             reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    ELSE            reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)
    ELSEIF          reduce using rule 33 (asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON .)


state 248

    (28) lista_parametros -> IDENTIFICADOR SUFIX tipo_dato .

    RPAR            reduce using rule 28 (lista_parametros -> IDENTIFICADOR SUFIX tipo_dato .)
    COMMA           reduce using rule 28 (lista_parametros -> IDENTIFICADOR SUFIX tipo_dato .)


state 249

    (13) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones . END SEMICOLON
    (17) lista_instrucciones -> lista_instrucciones . instruccion
    (18) lista_instrucciones -> lista_instrucciones . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    END             shift and go to state 269
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    instruccion                    shift and go to state 160
    transferencia                  shift and go to state 161
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 250

    (16) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END . SEMICOLON

    SEMICOLON       shift and go to state 270


state 251

    (26) lista_parametros -> lista_parametros COMMA IDENTIFICADOR .
    (27) lista_parametros -> lista_parametros COMMA IDENTIFICADOR . SUFIX tipo_dato

    RPAR            reduce using rule 26 (lista_parametros -> lista_parametros COMMA IDENTIFICADOR .)
    COMMA           reduce using rule 26 (lista_parametros -> lista_parametros COMMA IDENTIFICADOR .)
    SUFIX           shift and go to state 271


state 252

    (14) declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .

    IDENTIFICADOR   reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    FUNCTION        reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    IF              reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    WHILE           reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    FOR             reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    MUTABLE         reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    STRUCT          reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    PRINT           reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    PRINTLN         reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    PUSH            reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    POP             reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    GLOBAL          reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    LOCAL           reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    $end            reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    BREAK           reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    CONTINUE        reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    RETURN          reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    END             reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    ELSE            reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)
    ELSEIF          reduce using rule 14 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON .)


state 253

    (15) declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END . SEMICOLON

    SEMICOLON       shift and go to state 272


state 254

    (50) condicional -> IF expresion sentencias ELSE sentencias END . SEMICOLON

    SEMICOLON       shift and go to state 273


state 255

    (51) condicional -> IF expresion sentencias elseifList END SEMICOLON .

    IDENTIFICADOR   reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    FUNCTION        reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    IF              reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    WHILE           reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    FOR             reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    MUTABLE         reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    STRUCT          reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    PRINT           reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    PRINTLN         reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    PUSH            reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    POP             reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    GLOBAL          reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    LOCAL           reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    $end            reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    BREAK           reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    CONTINUE        reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    RETURN          reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    END             reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    ELSE            reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)
    ELSEIF          reduce using rule 51 (condicional -> IF expresion sentencias elseifList END SEMICOLON .)


state 256

    (52) condicional -> IF expresion sentencias elseifList ELSE sentencias . END SEMICOLON

    END             shift and go to state 274


state 257

    (53) elseifList -> elseifList ELSEIF expresion . sentencias
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion
    (47) sentencias -> . lista_instrucciones
    (48) sentencias -> .
    (17) lista_instrucciones -> . lista_instrucciones instruccion
    (18) lista_instrucciones -> . lista_instrucciones transferencia
    (19) lista_instrucciones -> . instruccion
    (20) lista_instrucciones -> . transferencia
    (4) instruccion -> . asignacion
    (5) instruccion -> . asignacion_struct
    (6) instruccion -> . declareFunction
    (7) instruccion -> . callFunction
    (8) instruccion -> . condicional
    (9) instruccion -> . whileST
    (10) instruccion -> . forST
    (11) instruccion -> . struct
    (12) instruccion -> . inst_nativa
    (21) transferencia -> . BREAK SEMICOLON
    (22) transferencia -> . CONTINUE SEMICOLON
    (23) transferencia -> . returnValue SEMICOLON
    (30) asignacion -> . IDENTIFICADOR EQUALS expresion SEMICOLON
    (31) asignacion -> . tipoVariable IDENTIFICADOR EQUALS expresion SEMICOLON
    (32) asignacion -> . IDENTIFICADOR EQUALS expresion SUFIX tipo_dato SEMICOLON
    (33) asignacion_struct -> . IDENTIFICADOR PUNTO IDENTIFICADOR EQUALS expresion SEMICOLON
    (13) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON
    (14) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR END SEMICOLON
    (15) declareFunction -> . FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON
    (16) declareFunction -> . FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON
    (44) callFunction -> . callFunc SEMICOLON
    (49) condicional -> . IF expresion sentencias END SEMICOLON
    (50) condicional -> . IF expresion sentencias ELSE sentencias END SEMICOLON
    (51) condicional -> . IF expresion sentencias elseifList END SEMICOLON
    (52) condicional -> . IF expresion sentencias elseifList ELSE sentencias END SEMICOLON
    (55) whileST -> . WHILE expresion sentencias END SEMICOLON
    (56) forST -> . FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON
    (59) struct -> . MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (60) struct -> . STRUCT IDENTIFICADOR lista_atributos END SEMICOLON
    (65) inst_nativa -> . PRINT LPAR lista_expresion RPAR SEMICOLON
    (66) inst_nativa -> . PRINTLN LPAR lista_expresion RPAR SEMICOLON
    (67) inst_nativa -> . PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (68) inst_nativa -> . POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON
    (24) returnValue -> . RETURN expresion
    (25) returnValue -> . RETURN
    (34) tipoVariable -> . GLOBAL
    (35) tipoVariable -> . LOCAL
    (45) callFunc -> . IDENTIFICADOR LPAR RPAR
    (46) callFunc -> . IDENTIFICADOR LPAR lista_expresion RPAR

    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94
    END             reduce using rule 48 (sentencias -> .)
    ELSE            reduce using rule 48 (sentencias -> .)
    ELSEIF          reduce using rule 48 (sentencias -> .)
    BREAK           shift and go to state 98
    CONTINUE        shift and go to state 99
    IDENTIFICADOR   shift and go to state 13
    FUNCTION        shift and go to state 15
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    PRINT           shift and go to state 22
    PRINTLN         shift and go to state 23
    PUSH            shift and go to state 24
    POP             shift and go to state 25
    RETURN          shift and go to state 101
    GLOBAL          shift and go to state 26
    LOCAL           shift and go to state 27

    sentencias                     shift and go to state 275
    lista_instrucciones            shift and go to state 95
    instruccion                    shift and go to state 96
    transferencia                  shift and go to state 97
    asignacion                     shift and go to state 4
    asignacion_struct              shift and go to state 5
    declareFunction                shift and go to state 6
    callFunction                   shift and go to state 7
    condicional                    shift and go to state 8
    whileST                        shift and go to state 9
    forST                          shift and go to state 10
    struct                         shift and go to state 11
    inst_nativa                    shift and go to state 12
    returnValue                    shift and go to state 100
    tipoVariable                   shift and go to state 14
    callFunc                       shift and go to state 16

state 258

    (54) elseifList -> ELSEIF expresion sentencias .

    END             reduce using rule 54 (elseifList -> ELSEIF expresion sentencias .)
    ELSE            reduce using rule 54 (elseifList -> ELSEIF expresion sentencias .)
    ELSEIF          reduce using rule 54 (elseifList -> ELSEIF expresion sentencias .)


state 259

    (93) dimensiones -> dimensiones BRACKETA expresion BRACKETC .

    BRACKETA        reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    AND             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    OR              reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    SUM             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    RESTA           reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    MUL             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    DIV             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    POT             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    MOD             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    DEQUALS         reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    DIFF            reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    GREATER         reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    LESSTHAN        reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    GEQ             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    LEQ             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    BREAK           reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    CONTINUE        reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    IDENTIFICADOR   reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    FUNCTION        reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    IF              reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    WHILE           reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    FOR             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    MUTABLE         reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    STRUCT          reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    PRINT           reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    PRINTLN         reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    PUSH            reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    POP             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    RETURN          reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    GLOBAL          reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    LOCAL           reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    END             reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    ELSE            reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    ELSEIF          reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    SEMICOLON       reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    SUFIX           reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    RPAR            reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    COMMA           reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)
    BRACKETC        reduce using rule 93 (dimensiones -> dimensiones BRACKETA expresion BRACKETC .)


state 260

    (106) nativas -> LOG LPAR expresion COMMA expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 276
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 261

    (112) nativas -> PARSE LPAR tipo_dato COMMA expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 277
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 262

    (113) nativas -> TRUNC LPAR tipo_dato COMMA expresion . RPAR
    (71) expresion -> expresion . AND expresion
    (72) expresion -> expresion . OR expresion
    (73) expresion -> expresion . SUM expresion
    (74) expresion -> expresion . RESTA expresion
    (75) expresion -> expresion . MUL expresion
    (76) expresion -> expresion . DIV expresion
    (77) expresion -> expresion . POT expresion
    (78) expresion -> expresion . MOD expresion
    (79) expresion -> expresion . DEQUALS expresion
    (80) expresion -> expresion . DIFF expresion
    (81) expresion -> expresion . GREATER expresion
    (82) expresion -> expresion . LESSTHAN expresion
    (83) expresion -> expresion . GEQ expresion
    (84) expresion -> expresion . LEQ expresion

    RPAR            shift and go to state 278
    AND             shift and go to state 81
    OR              shift and go to state 82
    SUM             shift and go to state 83
    RESTA           shift and go to state 84
    MUL             shift and go to state 85
    DIV             shift and go to state 86
    POT             shift and go to state 87
    MOD             shift and go to state 88
    DEQUALS         shift and go to state 89
    DIFF            shift and go to state 90
    GREATER         shift and go to state 91
    LESSTHAN        shift and go to state 92
    GEQ             shift and go to state 93
    LEQ             shift and go to state 94


state 263

    (56) forST -> FOR IDENTIFICADOR IN expresion sentencias END . SEMICOLON

    SEMICOLON       shift and go to state 279


state 264

    (59) struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .

    IDENTIFICADOR   reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    FUNCTION        reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    IF              reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    WHILE           reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    FOR             reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    MUTABLE         reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    STRUCT          reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    PRINT           reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    PRINTLN         reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    PUSH            reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    POP             reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    GLOBAL          reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    LOCAL           reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    $end            reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    BREAK           reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    CONTINUE        reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    RETURN          reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    END             reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    ELSE            reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)
    ELSEIF          reduce using rule 59 (struct -> MUTABLE STRUCT IDENTIFICADOR lista_atributos END SEMICOLON .)


state 265

    (63) lista_atributos -> IDENTIFICADOR SUFIX tipo_dato SEMICOLON .

    END             reduce using rule 63 (lista_atributos -> IDENTIFICADOR SUFIX tipo_dato SEMICOLON .)
    IDENTIFICADOR   reduce using rule 63 (lista_atributos -> IDENTIFICADOR SUFIX tipo_dato SEMICOLON .)


state 266

    (61) lista_atributos -> lista_atributos IDENTIFICADOR SUFIX tipo_dato . SEMICOLON

    SEMICOLON       shift and go to state 280


state 267

    (67) inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR . SEMICOLON

    SEMICOLON       shift and go to state 281


state 268

    (68) inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR . SEMICOLON

    SEMICOLON       shift and go to state 282


state 269

    (13) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END . SEMICOLON

    SEMICOLON       shift and go to state 283


state 270

    (16) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .

    IDENTIFICADOR   reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    FUNCTION        reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    IF              reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    WHILE           reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    FOR             reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    MUTABLE         reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    STRUCT          reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    PRINT           reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    PRINTLN         reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    PUSH            reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    POP             reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    GLOBAL          reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    LOCAL           reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    $end            reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    BREAK           reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    CONTINUE        reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    RETURN          reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    END             reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    ELSE            reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)
    ELSEIF          reduce using rule 16 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR END SEMICOLON .)


state 271

    (27) lista_parametros -> lista_parametros COMMA IDENTIFICADOR SUFIX . tipo_dato
    (36) tipo_dato -> . INT64
    (37) tipo_dato -> . FLOAT64
    (38) tipo_dato -> . BOOL
    (39) tipo_dato -> . CHAR
    (40) tipo_dato -> . STRING
    (41) tipo_dato -> . ARRAY
    (42) tipo_dato -> . NOTHING
    (43) tipo_dato -> . IDENTIFICADOR

    INT64           shift and go to state 181
    FLOAT64         shift and go to state 182
    BOOL            shift and go to state 183
    CHAR            shift and go to state 184
    STRING          shift and go to state 185
    ARRAY           shift and go to state 186
    NOTHING         shift and go to state 187
    IDENTIFICADOR   shift and go to state 188

    tipo_dato                      shift and go to state 284

state 272

    (15) declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .

    IDENTIFICADOR   reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    FUNCTION        reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    IF              reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    WHILE           reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    FOR             reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    MUTABLE         reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    STRUCT          reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    PRINT           reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    PRINTLN         reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    PUSH            reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    POP             reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    GLOBAL          reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    LOCAL           reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    $end            reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    BREAK           reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    CONTINUE        reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    RETURN          reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    END             reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    ELSE            reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)
    ELSEIF          reduce using rule 15 (declareFunction -> FUNCTION IDENTIFICADOR LPAR RPAR lista_instrucciones END SEMICOLON .)


state 273

    (50) condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .

    IDENTIFICADOR   reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    FUNCTION        reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    IF              reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    WHILE           reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    FOR             reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    MUTABLE         reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    STRUCT          reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    PRINT           reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    PRINTLN         reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    PUSH            reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    POP             reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    GLOBAL          reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    LOCAL           reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    $end            reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    BREAK           reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    CONTINUE        reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    RETURN          reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    END             reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    ELSE            reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)
    ELSEIF          reduce using rule 50 (condicional -> IF expresion sentencias ELSE sentencias END SEMICOLON .)


state 274

    (52) condicional -> IF expresion sentencias elseifList ELSE sentencias END . SEMICOLON

    SEMICOLON       shift and go to state 285


state 275

    (53) elseifList -> elseifList ELSEIF expresion sentencias .

    END             reduce using rule 53 (elseifList -> elseifList ELSEIF expresion sentencias .)
    ELSE            reduce using rule 53 (elseifList -> elseifList ELSEIF expresion sentencias .)
    ELSEIF          reduce using rule 53 (elseifList -> elseifList ELSEIF expresion sentencias .)


state 276

    (106) nativas -> LOG LPAR expresion COMMA expresion RPAR .

    AND             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    OR              reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    SUM             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    RESTA           reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    MUL             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    DIV             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    POT             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    MOD             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    DEQUALS         reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    DIFF            reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    GREATER         reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    LESSTHAN        reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    GEQ             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    LEQ             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    BREAK           reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    CONTINUE        reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    IDENTIFICADOR   reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    FUNCTION        reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    IF              reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    WHILE           reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    FOR             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    MUTABLE         reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    STRUCT          reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    PRINT           reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    PRINTLN         reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    PUSH            reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    POP             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    RETURN          reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    GLOBAL          reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    LOCAL           reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    END             reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    ELSE            reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    ELSEIF          reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    SEMICOLON       reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    SUFIX           reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    RPAR            reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    COMMA           reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)
    BRACKETC        reduce using rule 106 (nativas -> LOG LPAR expresion COMMA expresion RPAR .)


state 277

    (112) nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .

    AND             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    OR              reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    SUM             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    RESTA           reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    MUL             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    DIV             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    POT             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    MOD             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    DEQUALS         reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    DIFF            reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    GREATER         reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    LESSTHAN        reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    GEQ             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    LEQ             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    BREAK           reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    CONTINUE        reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    IDENTIFICADOR   reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    FUNCTION        reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    IF              reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    WHILE           reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    FOR             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    MUTABLE         reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    STRUCT          reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    PRINT           reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    PRINTLN         reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    PUSH            reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    POP             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    RETURN          reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    GLOBAL          reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    LOCAL           reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    END             reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    ELSE            reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    ELSEIF          reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    SEMICOLON       reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    SUFIX           reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    RPAR            reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    COMMA           reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)
    BRACKETC        reduce using rule 112 (nativas -> PARSE LPAR tipo_dato COMMA expresion RPAR .)


state 278

    (113) nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .

    AND             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    OR              reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    SUM             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    RESTA           reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    MUL             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    DIV             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    POT             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    MOD             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    DEQUALS         reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    DIFF            reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    GREATER         reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    LESSTHAN        reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    GEQ             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    LEQ             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    BREAK           reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    CONTINUE        reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    IDENTIFICADOR   reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    FUNCTION        reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    IF              reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    WHILE           reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    FOR             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    MUTABLE         reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    STRUCT          reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    PRINT           reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    PRINTLN         reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    PUSH            reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    POP             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    RETURN          reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    GLOBAL          reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    LOCAL           reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    END             reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    ELSE            reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    ELSEIF          reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    SEMICOLON       reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    SUFIX           reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    RPAR            reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    COMMA           reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)
    BRACKETC        reduce using rule 113 (nativas -> TRUNC LPAR tipo_dato COMMA expresion RPAR .)


state 279

    (56) forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .

    IDENTIFICADOR   reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    FUNCTION        reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    IF              reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    WHILE           reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    FOR             reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    MUTABLE         reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    STRUCT          reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    PRINT           reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    PRINTLN         reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    PUSH            reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    POP             reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    GLOBAL          reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    LOCAL           reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    $end            reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    BREAK           reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    CONTINUE        reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    RETURN          reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    END             reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    ELSE            reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)
    ELSEIF          reduce using rule 56 (forST -> FOR IDENTIFICADOR IN expresion sentencias END SEMICOLON .)


state 280

    (61) lista_atributos -> lista_atributos IDENTIFICADOR SUFIX tipo_dato SEMICOLON .

    END             reduce using rule 61 (lista_atributos -> lista_atributos IDENTIFICADOR SUFIX tipo_dato SEMICOLON .)
    IDENTIFICADOR   reduce using rule 61 (lista_atributos -> lista_atributos IDENTIFICADOR SUFIX tipo_dato SEMICOLON .)


state 281

    (67) inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .

    IDENTIFICADOR   reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    FUNCTION        reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    IF              reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    WHILE           reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    FOR             reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    MUTABLE         reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    STRUCT          reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    PRINT           reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    PRINTLN         reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    PUSH            reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    POP             reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    GLOBAL          reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    LOCAL           reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    $end            reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    BREAK           reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    CONTINUE        reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    RETURN          reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    END             reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    ELSE            reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    ELSEIF          reduce using rule 67 (inst_nativa -> PUSH LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)


state 282

    (68) inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .

    IDENTIFICADOR   reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    FUNCTION        reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    IF              reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    WHILE           reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    FOR             reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    MUTABLE         reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    STRUCT          reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    PRINT           reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    PRINTLN         reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    PUSH            reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    POP             reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    GLOBAL          reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    LOCAL           reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    $end            reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    BREAK           reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    CONTINUE        reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    RETURN          reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    END             reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    ELSE            reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)
    ELSEIF          reduce using rule 68 (inst_nativa -> POP LPAR IDENTIFICADOR COMMA expresion RPAR SEMICOLON .)


state 283

    (13) declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .

    IDENTIFICADOR   reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    FUNCTION        reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    IF              reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    WHILE           reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    FOR             reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    MUTABLE         reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    STRUCT          reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    PRINT           reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    PRINTLN         reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    PUSH            reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    POP             reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    GLOBAL          reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    LOCAL           reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    $end            reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    BREAK           reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    CONTINUE        reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    RETURN          reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    END             reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    ELSE            reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)
    ELSEIF          reduce using rule 13 (declareFunction -> FUNCTION IDENTIFICADOR LPAR lista_parametros RPAR lista_instrucciones END SEMICOLON .)


state 284

    (27) lista_parametros -> lista_parametros COMMA IDENTIFICADOR SUFIX tipo_dato .

    RPAR            reduce using rule 27 (lista_parametros -> lista_parametros COMMA IDENTIFICADOR SUFIX tipo_dato .)
    COMMA           reduce using rule 27 (lista_parametros -> lista_parametros COMMA IDENTIFICADOR SUFIX tipo_dato .)


state 285

    (52) condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .

    IDENTIFICADOR   reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    FUNCTION        reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    IF              reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    WHILE           reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    FOR             reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    MUTABLE         reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    STRUCT          reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    PRINT           reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    PRINTLN         reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    PUSH            reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    POP             reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    GLOBAL          reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    LOCAL           reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    $end            reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    BREAK           reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    CONTINUE        reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    RETURN          reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    END             reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    ELSE            reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)
    ELSEIF          reduce using rule 52 (condicional -> IF expresion sentencias elseifList ELSE sentencias END SEMICOLON .)

